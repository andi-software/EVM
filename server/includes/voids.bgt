bool adm_apartamento(string nome, string mapa){
	string n1=string_to_upper_case(nome);
	string n2=string_to_upper_case(mapa);
	n1=string_replace(n1, "apartamento_de_", "", true);
	n2=string_replace(n2, "apartamento_de_", "", true);
	n1=string_replace(n1, "\r\n", "", true);
	n2=string_replace(n2, "\r\n", "", true);
	if(n1==n2){
		int index=get_player_index_from(n1);
		if (index>-1){
			return players[index].is_admin();
		}
	}
	return false;
}
bool igual(string n1, string n2){
	if(string_to_lower_case(n1)==string_to_lower_case(n2))return true;
	return false;
}
void daritem(string nome, string item, int quantidade){
	int index=get_player_index_from(nome);
	if(index<0)return;
	if(item!="xp"){
		players[index].inv_add_item(item, quantidade);
		send_reliable(players[index].peer_id, "msgpegouitem "+quantidade+" "+item, 0);
		if(doublegold==1){
			if(item=="reais"||item=="coins"){
				players[index].inv_add_item(item, quantidade);
				send_reliable(players[index].peer_id, "msgvocêganhamais "+quantidade, 0);
			}
		}
	}
	else if(item=="xp"){
		players[index].xp+=quantidade;
		send_reliable(players[index].peer_id, "msgvocêganhou "+quantidade, 0);
		if(doublexp==1){
			players[index].xp+=quantidade;
			send_reliable(players[index].peer_id, "msgvocêganhou2 "+quantidade, 0);
		}
	}
}
string pegarlancha(int index){
	string[] dd=string_split(players[index].inv, "\r\n", false);
	for(uint i=0;i<dd.length();i++){
		string[] d=string_split(dd[i], "=", false);
		if(string_contains(d[0], "chave_da_lancha_de_", 1)>-1){
			string it=string_replace(d[0], "chave_da_lancha_de_", "", false);
			return it;
		}
	}
	return "";
}
void ctime(int index){
	string upstring;
	if (upw==1)
	upstring+="uma semana, ";
	if (upw==2)
	upstring+="duas semanas, ";
	if (upw>2)
	upstring+=upw+" semanas, ";
	if (upd==1)
	upstring+="um dia, ";
	if (upd==2)
	upstring+="dois dias, ";
	if (upd>2)
	upstring+=upd+" dias, ";
	if (uph==1)
	upstring+="uma hora, ";
	if (uph==2)
	upstring+="duas horas, ";
	if (uph>2)
	upstring+=uph+" horas, ";
	if (upm==1)
	upstring+="um minuto, ";
	if (upm>1)
	upstring+=upm+" minutos, ";
	if (ups==1)
	upstring+="um segundo";
	if (ups>1)
	upstring+=ups+" segundos";
	send_reliable(event.peer_id, "msgservidorativo "+upstring+".",0);
}
void eadm(string msg){
	msgadm.insert_at(0, msg);
	for(uint i=0;i<players.length();i++){
		if(players[i].is_admin()){
			send_reliable(players[i].peer_id, "ps notify_startrek_pa.ogg", 0);
			send_reliable(players[i].peer_id, "msg2 "+msg, 0);
		}
		if(players[i].moderador==true){
			send_reliable(players[i].peer_id, "ps notify_startrek_pa.ogg", 0);
			send_reliable(players[i].peer_id, "msg2 "+msg, 0);
		}
	}
}
void opc(int index, string[] parsed){
	string msg=string_replace(get_event_message(), parsed[0]+" "+parsed[1]+" ", "", false);
	if(parsed[1]=="ideia"){
		if(msg.length()<120)send_reliable(players[index].peer_id, "msgnormal A mensagem é muito curta.", 0);
		else{
			send_reliable(players[index].peer_id, "msgnormal Ideia enviada!", 0);
			eadm("Ideia de "+players[index].charname+": "+msg);
		}
	}
}
bool dcomando(int index, string[] parsed){
	string v=string_replace(parsed[0], "/", "", false);
	if(file_exists("qcomandos/"+v+".md")){
		file f;
		f.open("qcomandos/"+v+".md", "r");
		string[] vv=string_split(f.read(), "\r\n", false);
		f.close();
		bool r=false;
		for(uint i=0;i<vv.length();i++){
			if(string_to_lower_case(vv[i])==string_to_lower_case(players[index].charname)){
				r=true;
				break;
			}
		}
		if(r)return true;
		else return false;
	}
	return false;
}
void morreu(int index, string[] parsed){
	send_reliable(0, "msg2 "+players[index].charname+"; ;morreu; ;"+string_replace(get_event_message(), parsed[0]+" ", "", false), 0);
	changemap("túnel", index, 1, 0);
	players[index].health=players[index].maxhealth;
	players[index].centado=false;
	if(players[index].inv_item_number("areia_da_montanha")>0){
		players[index].inv_add_item("areia_da_montanha", -1);
		send_reliable(players[index].peer_id, "ps notify_died.ogg", 0);
	}
	if(players[index].cloaked){
		players[index].cloaked=false;
		players[index].cloakhiding=false;
		send_reliable(players[index].peer_id,"stopcloak",0);
		send_packet(0,"play spell_cloak_powerdown.ogg "+players[index].x+" "+players[index].y+" "+players[index].map,players[index].map);
	}
	players[index].envenenado=false;
	players[index].nveneno=0;
	players[index].nparalisado=0;
	players[index].paralisado=false;
	players[index].tparalisado.force(0);
	players[index].tparalisado.pause();
	players[index].afking=false;
	players[index].afk=false;
	send_reliable(players[index].peer_id, "fimnovato", 0);
	if(players[index].invs==0){
		send_reliable(0,"playerbeep "+players[index].charname+" 1",0);
		players[index].bipar=1;
	}
	if(gamestopped==false)send_reliable(players[index].peer_id,"startmoving",0);
}
void dep3(int index, string[] parsed){
	string nn=parsed[1];
	int n=string_to_number(players[index].vconta);
	file f;
	f.open("players/"+nn+"/contabancaria.usr", "r");
	int t=string_to_number(f.read());
	f.close();
	if(igual(nn, players[index].charname))return;
	if(t<=0)send_reliable(players[index].peer_id, "msgnormal Conta inexistente.", 0);
	else if(n<=0)send_reliable(players[index].peer_id, "msgnormal Valor inválido.", 0);
	else if(n>players[index].inv_item_number("reais"))send_reliable(players[index].peer_id, "msgnormal Você não tem todo esse dinheiro!", 0);
	else{
		players[index].inv_add_item("reais", -n);
		send_reliable(players[index].peer_id, "msg2 Você deposita; ;"+n+"; ;reais na conta de; ;"+nn+".", 0);
		file f;
		f.open("players/"+nn+"/saldo.usr", "r");
		int saldo=string_to_number(f.read());
		f.close();
		f.open("players/"+nn+"/saldo.usr", "w");
		f.write(n+saldo);
		f.close();
	}
}
void sanimal(int index, string[] parsed){
	int quantidade=string_to_number(parsed[2]);
	if(quantidade>3)quantidade=3;
	if(quantidade<=0)quantidade=1;
	string qanimal=parsed[1];
	for(uint i=0;i<quantidade;i++){
		if(qanimal=="dragonsauro")spawn_dragonsauro(1, 0, players[index].map);
		if(qanimal=="urso")spawn_urso(1, 0, players[index].map);
		if(qanimal=="sequestrador")spawn_sequestrador(1, 0, players[index].map);
		if(qanimal=="guarda")spawn_guarda(1, 0, players[index].map);
		if(qanimal=="guardacofre")spawn_guardacofre(1, 0, players[index].map);
		if(qanimal=="prensadeira")spawn_prensadeira(1, 0, players[index].map);
		if(qanimal=="mercenario")spawn_mercenario(1, 0, players[index].map);
	}
	send_reliable(players[index].peer_id, "Pronto.", 0);
}
void give(int index, string[] parsed){
	int i2=get_player_index_from(parsed[1]);
	if(i2>-1){
		int amount=string_to_number(parsed[3]);
		if(players[index].naoitens==1){
			send_reliable(players[index].peer_id,"msgnormal Você não pode dar itens.",0);
		}
		else if (parsed[2]=="perna_quebrada"){
			send_reliable(event.peer_id, "msgnormal Não, você não pode cortar suas pernas e dá-las para alguém!",0);
		}
		else if(parsed[2]=="bazuca"||parsed[2]=="varinha"||parsed[2]=="galil"||parsed[2]=="reais"||parsed[2]=="mp7"||parsed[2]=="paraquedas"||parsed[2]=="controle_para_fita_explosiva"||parsed[2]=="colete_salva_vida"||parsed[2]=="colete_aprova_de_balas"||parsed[2]=="faca"||parsed[2]=="bomba_nuclear"||parsed[2]=="ak48"||parsed[2]=="pente_customizado"){
			send_reliable(players[index].peer_id, "msgnormal Você não pode dar esse item!", 0);
			return;
		}
		else{
			if(amount<=players[index].inv_item_number(parsed[2]) and amount>0){
				players[index].inv_add_item(parsed[2],0-amount);
				players[i2].inv_add_item(parsed[2],amount);
				send_reliable(players[i2].peer_id,"msglhedeu "+players[index].charname+" "+amount+" "+parsed[2],0);
				send_reliable(players[index].peer_id,"msgvocêdeu "+amount+" "+parsed[2]+" "+players[i2].charname,0);
				send_packet(0,"play gift.ogg "+players[i2].x+" "+players[i2].y+" "+players[i2].map,players[i2].map);
			}
			else{
				send_reliable(players[index].peer_id,"msgvocênãotem", 0);
			}
		}
	}
	else{
		send_reliable(players[index].peer_id,"msgjogadornãoencontrado",0);
	}
}
void eapartamento(int index, string[] parsed){
	int cod=string_to_number(parsed[1]);
	string map=players[index].map;
	file f;
	f.open("maps/"+map+".map", "r");
	string mdata=f.read();
	f.close();
	string[] p1=delinear(mdata);
	for(uint i=0; i<p1.length(); i++){
		string[] parsed=string_split(p1[i], ":", true);
		if(parsed[0]=="travelpoint"&&parsed.length()>8){
			int minx=string_to_number(parsed[1]);
			int maxx=string_to_number(parsed[2]);
			int miny=string_to_number(parsed[3]);
			int maxy=string_to_number(parsed[4]);
			int newx=string_to_number(parsed[5]);
			int newy=string_to_number(parsed[6]);
			string newmap=parsed[7];
			string newmap2=parsed[7];
			string text=parsed[8];
			string sec="";
			if(parsed.length>9) sec=parsed[9];
			string[] tmpout;
			if(minx<=players[index].x and maxx>=players[index].x and miny<=players[index].y and maxy>=players[index].y){
				for(uint i2=0;i2<computadors.length();i2++){
					if(computadors[i2].map==newmap){
						if(cod!=computadors[i2].codcasa||cod==0){
							if(computadors[i2].seguro==1){
								players[index].health=-1;
								players[index].lasthit="eletrocutado_"+string_replace(computadors[i2].map, "apartamento_de_", "", false);
								send_packet(0, "play eletrocutado.ogg "+players[index].x+" "+players[index].y, players[index].map);
								return;
							}
							else if(computadors[i2].seguro==0&&computadors[i2].talarme==0){
								computadors[i2].talarme=1;
								computadors[i2].salarme=spawn_moving_sound("alarm5.ogg", players[index].x, players[index].y, players[index].map);
								computadors[i2].salarme2=spawn_moving_sound("alarm5.ogg", 1, 0, computadors[i2].map);
								return;
							}
						}
						else if(cod==computadors[i2].codcasa){
							changemap(computadors[i2].map, index, 1, 0, "eapartamento.ogg");
							return;
						}
					}
				}
			}
		}
	}
}
void drop(int index, int quantidade, string nomeitem){
	if(quantidade<=players[index].inv_item_number(nomeitem) and quantidade>0){
		bool tem=false;
		if(players[index].naoitens==1) send_reliable(players[index].peer_id,"msgnormal Você não pode soltar itens.",0);
		else if(nomeitem=="bazuca"||nomeitem=="varinha"||nomeitem=="galil"||nomeitem=="mp7"||nomeitem=="paraquedas"||nomeitem=="controle_para_fita_explosiva"||nomeitem=="colete_salva_vida"||nomeitem=="colete_aprova_de_balas"||nomeitem=="faca")return;
		else{
			players[index].inv_add_item(nomeitem,0-quantidade);
			for(uint i=0;i<apartamentos.length();i++){
				if(apartamentos[i].map==players[index].map&&string_contains(get_zone_at(players[index].x, players[index].y, players[index].map), "Um grande baú de madeira. Parece trancado.", 1)>-1){
					apartamentos[i].inv_add_item(nomeitem, quantidade);
					tem=true;
					break;
				}
			}
			if(nomeitem=="corpo_de_sequestrador"&&players[index].map=="sala_do_fander"&&players[index].questdesaparecida==1&&players[index].terminouquestdesaparecida==0){
				send_reliable(players[index].peer_id, "msgnormal Finalmente! Após sua incessante procura e força de vontade, você chega em seu destino final, trazendo o que Fander, delegado da polícia federal e Kinder, pai da menina desaparecida tanto procurava. -Você fez um ótimo trabalho, diz Fander. -Muito obrigado pela ajuda, é graças à pessoas como você que Belick, apesar de ter muitos ladrões, está avançando e ainda prevalece sobre o mau, continua Kinder. -Tenho uma recompensa para você. Não é muito, mais certamente lhe ajudará em diversas situações, completa Jader, presidente de Belick.", 0);
				players[index].inv_add_item("capacete_de_polícia", 1);
				players[index].inv_add_item("reais", random(100, 200));
				players[index].terminouquestdesaparecida=1;
			}
			else if(tem==false){
				if(string_contains(nomeitem, "_nsumir", 1)>-1){
					nomeitem=string_replace(nomeitem, "_nsumir", "", true);
					spawn_obj(players[index].x,players[index].y,nomeitem,quantidade,players[index].map, 0);
				}
				else spawn_obj(players[index].x,players[index].y,nomeitem,quantidade,players[index].map);
			}
		}
	}
}
void getversion(int index){
	if(file_exists("players/"+players[index].charname+"/mod.md"))players[index].moderador=true;
	if(players[index].pacifico==1)send_reliable(players[index].peer_id,"ininovato", 0);
	file ff;
	if(file_exists("players/"+players[index].charname+"/saldo.md")){
		ff.open("players/"+players[index].charname+"/saldo.md", "r");
		players[index].saldo=string_to_number(ff.read());
		ff.close();
	}
	ff.open("players/"+players[index].charname+"/inv.md", "r");
	string pinv=ff.read();
	ff.close();
	pinv=string_replace(pinv, " ", "", true);
	players[index].inv=pinv;
	string[] invsec;
	if(players[index].inv_item_number("vara_de_pesca")>0)invsec.insert_last("vara_de_pesca");
	if(players[index].inv_item_number("galão_de_gasolina")>0)invsec.insert_last("galão_de_gasolina");
	if(players[index].inv_item_number("dardo")>0)invsec.insert_last("dardo");
	if(players[index].inv_item_number("dardo_envenenado")>0)invsec.insert_last("dardo_envenenado");
	if(players[index].inv_item_number("galão_de_gasolina")>0)invsec.insert_last("galão_de_gasolina");
	if(players[index].inv_item_number("fita_explosiva")>0)invsec.insert_last("fita_explosiva");
	send_reliable(players[index].peer_id, "inv "+players[index].inv, 0);
	if(invsec.length()>0)send_reliable(players[index].peer_id, "invsec "+linear(invsec), 0);
	if(file_exists("players/"+players[index].charname+"/seguro.txt"))send_reliable(players[index].peer_id, "seguro", 0);
	if(players[index].sapatomagnetico==1)send_reliable(players[index].peer_id, "asapato", 0);
	if(players[index].is_admin()==true){
		send_reliable(players[index].peer_id, "djogador", 0);
		players[index].nvarinha=1000000;
		players[index].nsede=0;players[index].nfome=0;players[index].ngripe=0;
	}
	if(players[index].moderador==true){
		send_reliable(players[index].peer_id, "dmoderador", 0);
		players[index].nvarinha=1000000;
		players[index].nsede=0;players[index].nfome=0;players[index].ngripe=0;
	}
	send_reliablen(0, players[index].charname, "p "+players[index].charname+" "+players[index].x+" "+players[index].y,0);
	send_reliablen(0, players[index].charname, "playerbeep "+players[index].charname+" "+players[index].bipar, 0);
	send_reliablen(0,players[index].charname, "upl "+players[index].charname+" "+players[index].x+" "+players[index].y+" "+players[index].map,0);
	send_reliablen(0, players[index].charname, "pp "+players[index].charname+" "+players[index].pacifico, 0);
	for (uint i=0; i<players.length(); i++){
		send_reliable(players[index].peer_id,"p "+players[i].charname+" "+players[i].x+" "+players[i].y,0);
		send_reliable(players[index].peer_id, "playerbeep "+players[i].charname+" "+players[i].bipar, 0);
		send_reliable(players[index].peer_id,"upl "+players[i].charname+" "+players[i].x+" "+players[i].y+" "+players[i].map,0);
		send_reliable(players[index].peer_id, "pp "+players[i].charname+" "+players[i].pacifico, 0);
	}
	for(uint i=0;i<apartamentos.length();i++){if(apartamentos[i].map==players[index].map)send_reliable(players[index].peer_id, "apartamentoinv "+apartamentos[i].apartamentoinv,0);}
	for(uint i=0;i<computadors.length();i++){
		if(computadors[i].map==players[index].map){
			send_reliable(players[index].peer_id,"spawncomputador "+computadors[i].id+" "+computadors[i].x+" "+computadors[i].y+" "+computadors[i].map+" "+computadors[i].ligada,0);
			string opcoespc="Exibir estatísticas=status\r\nAlternar modo de segurança entre choque e alarme=segurança\r\nImprimir um documento=imprimir\r\nEnviar ideia=ideia";
			opcoespc+="\r\n"+(computadors[i].relogio==0?"Desativar":"Ativar")+" relógio=relógio";
			if(computadors[i].talarme==1)opcoespc+="\r\nDesativar alarme=alarme";
			if(adm_apartamento(players[index].dalison2, computadors[i].map)){
				opcoespc+="\r\n"+(computadors[i].abau==0? "não permitindo":"permitindo")+" que os outros abram seu baú";
				if(computadors[i].fbau==1)opcoespc+="\r\nFechar baú=fecharbaú";
				if(computadors[i].tabrir.elapsed<=0)opcoespc+="\r\nAbrir porta por 5 segundos=porta";
				opcoespc+="\r\nExpulsar jogadores de seu apartamento=expulsar";
				opcoespc+="\r\nTrocar código de acesso=mcod";
			}
			if(players[index].is_admin())opcoespc+="\r\nLer mensagens administrativas=administrativas";
			send_reliable(players[index].peer_id, "opcoespc "+opcoespc, 0);
			break;
		}
	}
	for(uint i=0; i<maquinatempos.length; i++){
		send_reliable(players[index].peer_id,"spawnmaquinatempo "+maquinatempos[i].id+" "+maquinatempos[i].x+" "+maquinatempos[i].y+" "+maquinatempos[i].map+" "+maquinatempos[i].ligada,0);
	}
	for(uint iba=0; iba<msounds.length(); iba++){
		if(msounds[iba].map==players[index].map)send_reliable(players[index].peer_id,"cm "+msounds[iba].id+" "+msounds[iba].soundloop+" "+msounds[iba].x+" "+msounds[iba].y+" "+msounds[iba].map, 0);
	}
	send_packet(0,"upl "+players[index].charname+" "+players[index].x+" "        +players[index].y+" "+players[index].map,players[index].map);
	senditems(index);
	if(chovendo==1){
		send_reliable(players[index].peer_id, "volumechuva "+volumechuva, 0);
		send_reliable(players[index].peer_id, "chuvaativa", 0);
	}
	if(players[index].coletesalvavida==1)send_reliable(players[index].peer_id, "usarcolete", 0);
	string ms="motd Bem-vind"+players[index].sexo2+" "+version+" ";
	if(players[index].idiomachat=="pt")ms+=msgpt;
	else if(players[index].idiomachat=="en")ms+=msgen;
	else if(players[index].idiomachat=="es")ms+=msges;
	else if(players[index].idiomachat=="fr")ms+=msgfr;
	send_reliable(players[index].peer_id, ms, 0);
	for(uint i=0;i<ambientesmapa.length();i++){
		string[] z=string_split(ambientesmapa[i], ":", false);
		if(players[index].map==z[0]){
			if(hora<6||hora>=18) send_reliable(players[index].peer_id, "addambiente 1 200 0 200 "+z[1], 0);
			else if(hora>=6||hora<18) send_reliable(players[index].peer_id, "addambiente 1 200 0 200 "+z[2], 0);
		}
	}
	if(TIME_HOUR==16)send_reliable(players[index].peer_id, "msg2 Evento em andamento:; ;Massacre da quadrilha de sequestradores;.", 0);
	if(TIME_HOUR==18)send_reliable(players[index].peer_id, "msg2 Evento em andamento:; ;Helicóptero de guerra;.", 0);
	if(TIME_HOUR==20)send_reliable(players[index].peer_id, "msg2 Evento em andamento:; ;O carro forte de Belick;.", 0);
	if(gamestopped) {
		send_reliable(players[index].peer_id,"stopmoving",0);
		send_reliable(players[index].peer_id,"msgnormal O jogo está congelado.",0);
	}
	send_reliable(players[index].peer_id, "ps notify_dingding.ogg", 0);
	players[index].conectou=1;
	netloop();
}
void whoonline(int index){
	int onthis=0;
	int onother=0;
	string sendmes;
	for (uint i=0; i<players.length(); i++){
		if(players[i].map==players[index].map&&players[i].afk==false&&players[i].invs==0)onthis+=1;
		else if(players[i].map!=players[index].map&&players[i].afk==false&&players[i].invs==0)onother+=1;
	}
	if (onother>0&&onthis>0)sendmes=(onthis+onother)+" online. "+onthis+" aqui, "+onother+" em outro lugar.";
	else if(onthis<=0&&onother>0)sendmes=onother+" online. "+onother+" em outro lugar.";
	else if (onother==0&&onthis>1)sendmes=(onthis+onother)+" online. "+onthis+" aqui.";
	else if (onother==0&&onthis==1){
		for(uint i=0;i<players.length();i++){
			if(players[i].map==players[index].map&&players[i].invs==0&&players[i].afk==false)sendmes="Apenas "+players[i].title+" "+players[i].charname+" no jogo.";
		}
	}
	send_reliable(players[index].peer_id, "msgonlines "+sendmes,0);
	netloop();
}
void pc(int index){
	string m=string_replace(get_event_message(), "pc ", "", false);
	if(string_contains(m, "segurança", 1)>-1){
		for(uint i=0;i<computadors.length();i++){
			if(computadors[i].map==players[index].map){
				if(computadors[i].seguro==0){
					computadors[i].seguro=1;
					send_packet(0, "play schoque.ogg "+computadors[i].x+" "+computadors[i].y, computadors[i].map);
				}
				else if(computadors[i].seguro==1){
					computadors[i].seguro=0;
					send_packet(0, "play salarme.ogg "+computadors[i].x+" "+computadors[i].y, computadors[i].map);
				}
				break;
			}
		}
	}
	else if(string_contains(m, "documento", 1)>-1) send_reliable(players[index].peer_id, "mtext O que você deseja escrever no folheto?:imprimir", 0);
	else if(string_contains(string_to_lower_case(m), "de acesso", 1)>-1) send_reliable(players[index].peer_id, "mtext Qual o novo código de acesso para seu apartamento?:mudcod", 0);
	else if(string_contains(string_to_lower_case(m), "enviar ideia", 1)>-1) send_reliable(players[index].peer_id, "mtext Digite sua ideia (No mínimo, 120 letras). Ela será enviada para os administradores.:opc ideia", 0);
	else if(string_contains(m, "Exibir", 1)>-1)send_reliable(players[index].peer_id, "msg2 Você está no nível; "+players[index].level+", ;e na patente; ;"+string_trim_right(players[index].title, 1)+";. ;Sua experiência é; "+players[index].xp+", ;E para o próximo nível você precisa de mais; ;"+(players[index].xprequerida-players[index].xp)+". ;Você está com; "+players[index].nfome+"% ;de fome, e;"+players[index].nsede+"% ;de sede.", 0);
	else if(string_contains(m, "mensagens administrativas", 1)>-1){
		string[] add;
		add.insert_last("Mensagens disponíveis:"+bell2+"z");
		for(uint i=0;i<msgadm.length();i++){
			add.insert_last(msgadm[i]+bell2+"z");
		}
		send_reliable(players[index].peer_id, "mnormal2 "+linear(add), 0);
	}
	else if(string_contains(m, "que os outros abram seu baú", 1)>-1){
		for(uint i=0;i<computadors.length();i++){
			if(computadors[i].map==players[index].map){
				if(computadors[i].abau==0)computadors[i].abau=1;
				else if(computadors[i].abau==1)computadors[i].abau=0;
			}
		}
	}
	else if(string_contains(m, "Fechar baú", 1)>-1){
		for(uint i=0;i<computadors.length();i++){
			if(computadors[i].map==players[index].map){
				computadors[i].fbau=0;
				send_packet(0, "fbau", computadors[i].map);
				send_packet(0, "play fbaú.ogg 6 21", computadors[i].map);
			}
		}
	}
	else if(string_contains(m, "relógio", 1)>-1){
		for(uint i=0;i<computadors.length();i++){
			if(computadors[i].map==players[index].map){
				if(computadors[i].relogio==0){
					computadors[i].relogio=1;
					if(computadors[i].srelogio!="")destroy_moving_sound(computadors[i].srelogio);
				}
				else if(computadors[i].relogio==1){
					computadors[i].relogio=0;
					if(computadors[i].srelogio!="")destroy_moving_sound(computadors[i].srelogio);
					computadors[i].srelogio=spawn_moving_sound("clock.ogg", 1, 4, computadors[i].map);
				}
			}
		}
	}
	else if(string_contains(m, "Abrir porta por 5 segundos", 1)>-1){
		for(uint i=0;i<computadors.length();i++){
			if(computadors[i].map==players[index].map){
				file f;
				f.open("maps/"+players[index].map+".map", "r");
				string[] linhas=delinear(f.read());
				f.close();
				int x=1000, y=0;
				for(uint i2=0;i2<linhas.length();i2++){
					string[] l=string_split(linhas[i2], ":", false);
					if(l[0]=="travelpoint"){
						x=string_to_number(l[5]);
						y=string_to_number(l[6]);
					}
				}
				send_packet(0, "play door12open.ogg "+x+" "+y, "prédio_residencial");
				computadors[i].tabrir.restart();
			}
		}
	}
	else if(string_contains(m, "Expulsar jogadores de seu apartamento", 1)>-1){
		for(uint i=0;i<computadors.length();i++){
			if(computadors[i].map==players[index].map){
				file f;
				f.open("maps/"+players[index].map+".map", "r");
				string[] linhas=delinear(f.read());
				f.close();
				int x=1, y=0;
				for(uint i2=0;i2<linhas.length();i2++){
					string[] l=string_split(linhas[i2], ":", false);
					if(l[0]=="travelpoint"){
						x=string_to_number(l[5]);
						y=string_to_number(l[6]);
					}
				}
				for(uint i2=0;i2<players.length();i2++){
					if(players[i2].charname!=players[index].charname&&players[i2].map==players[index].map){
						changemap("prédio_residencial", i2, x, y);
						send_reliable(players[i2].peer_id, "msg2 Você foi expulso do apartamento de; "+players[index].charname+"!", 0);
					}
				}
				send_reliable(players[index].peer_id, "msgnormal Pronto.", 0);
			}
		}
	}
	else if(string_contains(m, "Desativar alarme", 1)>-1){
		for(uint i=0;i<computadors.length();i++){
			if(computadors[i].map==players[index].map){
				computadors[i].talarme=0;
				destroy_moving_sound(computadors[i].salarme);
				destroy_moving_sound(computadors[i].salarme2);
				break;
			}
		}
	}
	for(uint i=0;i<computadors.length();i++){
		if(computadors[i].map==players[index].map){
			string opcoespc="Exibir estatísticas=status\r\nAlternar modo de segurança entre choque e alarme=segurança\r\nImprimir um documento=imprimir\r\nEnviar ideia=ideia";
			opcoespc+="\r\n"+(computadors[i].relogio==0?"Desativar":"Ativar")+" relógio=relógio";
			if(computadors[i].talarme==1)opcoespc+="\r\nDesativar alarme=alarme";
			if(adm_apartamento(players[index].dalison2, computadors[i].map)){
				opcoespc+="\r\n"+(computadors[i].abau==0? "não permitindo":"permitindo")+" que os outros abram seu baú";
				if(computadors[i].fbau==1)opcoespc+="\r\nFechar baú=fecharbaú";
				if(computadors[i].tabrir.elapsed<=0)opcoespc+="\r\nAbrir porta por 5 segundos=porta";
				opcoespc+="\r\nExpulsar jogadores de seu apartamento=expulsar";
				opcoespc+="\r\nTrocar código de acesso=mcod";
			}
			if(players[index].is_admin())opcoespc+="\r\nLer mensagens administrativas=administrativas";
			send_packet(0, "opcoespc "+opcoespc, computadors[i].map);
			break;
		}
	}
	netloop();
}
void zsa1(int index){
	bool tem=false, avisou=false;
	string opcoespc;
	for(uint i=0;i<computadors.length();i++){
		if(players[index].x==computadors[i].x&&players[index].y==computadors[i].y&&computadors[i].map==players[index].map&&players[index].centado){
			for(uint i2=0;i2<players.length();i2++){
				if(players[i2].centado==true&&players[index].x==players[i2].x&&players[index].y==players[i2].y&&players[index].map==players[i2].map&&players[i2].charname!=players[index].charname){
					tem=true;
					break;
				}
			}
			if(computadors[i].ligando==true&&computadors[i].iniciado==false){
				send_reliable(players[index].peer_id, "msgnormal Iniciando o Sistema FD...", 0);
				avisou=true;
				break;
			}
			if(tem==true&&avisou==false)send_reliable(players[index].peer_id, "msgnormal Já tem alguém no computador!", 0);
			else if(tem==false&&avisou==false&&computadors[i].ligada==1){
				opcoespc="Exibir estatísticas=status\r\nAlternar modo de segurança entre choque e alarme=segurança\r\nImprimir um documento=imprimir\r\nEnviar ideia=ideia";
				opcoespc+="\r\n"+(computadors[i].relogio==0?"Desativar":"Ativar")+" relógio=relógio";
				if(computadors[i].talarme==1)opcoespc+="\r\nDesativar alarme=alarme";
				if(adm_apartamento(players[index].dalison2, computadors[i].map)){
					opcoespc+="\r\n"+(computadors[i].abau==0? "não permitindo":"permitindo")+" que os outros abram seu baú";
					if(computadors[i].fbau==1)opcoespc+="\r\nFechar baú=fecharbaú";
					if(computadors[i].tabrir.elapsed<=0)opcoespc+="\r\nAbrir porta por 5 segundos=porta";
					opcoespc+="\r\nExpulsar jogadores de seu apartamento=expulsar";
					opcoespc+="\r\nTrocar código de acesso=mcod";
				}
				if(players[index].is_admin())opcoespc+="\r\nLer mensagens administrativas=administrativas";
				send_reliable(players[index].peer_id, "opcoespc "+opcoespc, 0);
				send_reliable(players[index].peer_id, "ucomputador", 0);
			}
		}
	}
	for(uint i=0;i<objs.length();i++){
		if(objs[i].item=="bandeira_desafio"&&players[index].x==objs[i].x&&players[index].y==objs[i].y&&players[index].inv_item_number("bandeira_mortal")>0){
			send_reliable(0, "msgnormal A equipe Desafio ganhou!", 0);
			for(uint i2=0;i2<players.length();i2++){
				if(players[i2].equipedesafio==1||players[i2].equipemortal==1) changemap("aeroporto", i2, 1, 10, "moveu.ogg");
				if(players[i2].equipedesafio==1)send_reliable(players[i2].peer_id, "ps g_quest.ogg", 0);
				players[i2].equipedesafio=0;
			}
			players[index].inv_add_item("bandeira_mortal", -1);
			break;
		}
		if(objs[i].item=="bandeira_mortal"&&players[index].x==objs[i].x&&players[index].y==objs[i].y&&players[index].inv_item_number("bandeira_desafio")>0){
			send_reliable(0, "msgnormal A equipe Mortal ganhou!", 0);
			for(uint i2=0;i2<players.length();i2++){
				if(players[i2].equipedesafio==1||players[i2].equipemortal==1)changemap("aeroporto", i2, 1, 10, "moveu.ogg");
				if(players[i2].equipemortal==1)send_reliable(players[i2].peer_id, "ps g_quest.ogg", 0);
				players[i2].equipemortal=0;
			}
			players[index].inv_add_item("bandeira_desafio", -1);
			break;
		}
	}
	for(uint i=0;i<maquinatempos.length();i++){
		if(maquinatempos[i].x==players[index].x&&maquinatempos[i].y==players[index].y&&maquinatempos[i].map==players[index].map){
			if(maquinatempos[i].ligada==1){
				maquinatempos[i].ligada=0;
				send_packet(0, "atumaquinatempo "+maquinatempos[i].id+" "+maquinatempos[i].ligada, maquinatempos[i].map);
			}
			else if(maquinatempos[i].ligada==0){
				maquinatempos[i].ligada=1;
				send_packet(0, "atumaquinatempo "+maquinatempos[i].id+" "+maquinatempos[i].ligada, maquinatempos[i].map);
			}
		}
	}
	if(players[index].map=="casa_do_armeiro"&&players[index].x==10&&players[index].y==0){
		if(players[index].inv_item_number("mp7_quebrada")>1){
			players[index].inv_add_item("mp7_quebrada", -2, false);
			players[index].inv_add_item("mp7", 1);
			send_reliable(players[index].peer_id, "msgnormal Usando as partes aproveitáveis de suas armas Ithalo, o armeiro, te entrega uma totalmente arrumada!", 0);
		}
		else if(players[index].inv_item_number("galil_quebrada")>1){
			players[index].inv_add_item("galil_quebrada", -2, false);
			players[index].inv_add_item("galil", 1);
			send_reliable(players[index].peer_id, "msgnormal Usando as partes aproveitáveis de suas armas Ithalo, o armeiro, te entrega uma totalmente arrumada!", 0);
		}
		else if(players[index].inv_item_number("bazuca_quebrada")>1){
			players[index].inv_add_item("bazuca_quebrada", -2, false);
			players[index].inv_add_item("bazuca", 1);
			send_reliable(players[index].peer_id, "msgnormal Usando as partes aproveitáveis de suas armas Ithalo, o armeiro, te entrega uma totalmente arrumada!", 0);
		}
	}
	else if(players[index].map=="sala_do_fander"&&players[index].x>=18&&players[index].x<=19&&players[index].inv_item_number("corpo_de_sequestrador")>0){
		send_reliable(players[index].peer_id, "msg2 Fander, o delegado; ;diz:; ;Excelente trabalho;, "+players[index].charname+"! ;Sinceramente, com essa quantidade de corpos, eu duvido que a quadrilha tenha sido desmontada... Mais, pela sua dedicação em nos ajudar, aqui está sua recompensa:", 0);
		int d=players[index].inv_item_number("corpo_de_sequestrador");
		players[index].inv_add_item("corpo_de_sequestrador", -d, false);
		daritem(players[index].charname, "reais", (10*d));
		daritem(players[index].charname, "xp", (10*d));
	}
	else if(players[index].map=="desafio_constante"){
		if(players[index].x==79){
			if(players[index].equipedesafio==1)changemap("desafio_constante", index, 81, 0, "moveu.ogg");
			else send_reliable(players[index].peer_id, "msgnormal Sai! Você não pode entrar aqui!", 0);
		}
		else if(players[index].x==21){
			if(players[index].equipemortal==1)changemap("desafio_constante", index, 19, 0, "moveu.ogg");
			else send_reliable(players[index].peer_id, "msgnormal Sai! Você não pode entrar aqui!", 0);
		}
	}
	for(uint i=0;i<fonteaguas.length();i++){
		if(fonteaguas[i].x==players[index].x&&fonteaguas[i].y==players[index].y&&fonteaguas[i].mapa==players[index].map){
			if(players[index].nsede>0){
				send_packet10(0, players[index].charname, players[index].charname, "bebendoagua.ogg "+players[index].x+" "+players[index].y, players[index].map);
				players[index].nsede-=20;
			}
			else send_reliable(players[index].peer_id, "msgnormal Mas você está muito chei"+players[index].sexo2+"!", 0);
			break;
		}
	}
	string msga=string_replace(get_event_message(), "zsa ", "", false);
	if(msga=="Um antigo desktop."&&players[index].map=="sala_dos_professores")send_reliable(players[index].peer_id, "msgnormal Pow ixvwível que paweça, ekte dekktop aixda ektá em fuxvioxamexto, moktwaxdo ak keguixtek letwak: Pwevikamokde250azeitoxakpawawevheawakpizzakquekewãokewvidakpawaxokkokaluxok", 0);
	else if(players[index].map=="diretoria"&&msga=="Mesa da diretora"&&players[index].inv_item_number("azeitona")>=250){
		send_reliable(players[index].peer_id, "msgnormal Alguém diz: Muito obrigado! Sua contribuição, sem dúvidas foi muito importante para a continuação deste projeto. Por este motivo, vamos lhe dar uma recompensa:", 0);
		players[index].inv_add_item("azeitona", -250, false);
		players[index].inv_add_item("pacote_de_teleporters", 1);
		send_reliable(players[index].peer_id, "msgpegouitem 1 pacote_de_teleporters", 0);
	}
	else if(msga=="Lanchonete."&&players[index].map=="pesqueiro"){
		int p=players[index].inv_item_number("peixe_pescado");
		if(p>=10&&p<30){
			send_reliable(players[index].peer_id, "msgnormal Toninho, o balconista diz: Uai! Não é que você é bão mesmo! Muito obrigado pelos peixinho!", 0);
			players[index].inv_add_item("peixe_pescado", -10, false);
			players[index].inv_add_item("reais", 50);
			send_reliable(players[index].peer_id, "msgpegouitem 50 reais", 0);
			if(doublegold==1){
				send_reliable(players[index].peer_id, "msgvocêganhamais 50", 0);
				players[index].inv_add_item("reais",50);
			}
			ganhaxp(players[index].charname, 100, 0, true);
		}
		else if(p>=30&&p<50){
			send_reliable(players[index].peer_id, "msg2 Toninho, o balconista diz: Uai! Não é que você é um dus bão memo! Muito obrigado pelos peixinho!", 0);
			players[index].inv_add_item("peixe_pescado", -30, false);
			players[index].inv_add_item("reais", 150);
			send_reliable(players[index].peer_id, "msgpegouitem 150 reais", 0);
			if(doublegold==1){
				send_reliable(players[index].peer_id, "msgvocêganhamais 150", 0);
				players[index].inv_add_item("reais",150);
			}
			ganhaxp(players[index].charname, 300, 0, true);
		}
		else if(p>=50){
			send_reliable(players[index].peer_id, "msg2 Toninho, o balconista diz: Nossa! Se ta com tudo amigo! Conseguiu pegar 50 peixinho! Nem eu pegaria se bucado aí sô. Vai ser de muita serventia pa nóis aqui.", 0);
			players[index].inv_add_item("peixe_pescado", -50, false);
			players[index].inv_add_item("reais", 300);
			send_reliable(players[index].peer_id, "msgpegouitem 300 reais", 0);
			if(doublegold==1){
				send_reliable(players[index].peer_id, "msgvocêganhamais 300", 0);
				players[index].inv_add_item("reais",300);
			}
			ganhaxp(players[index].charname, 600, 0, true);
		}
		else if(p<10)send_reliable(players[index].peer_id, "msgnormal Toninho, o balconista diz: Se ussê arranjar uns pexinho pa nóis, eu posso te dar uma graninha... Basta só você trabaiar pra mim.", 0);
	}
	else if(msga=="Vaso sanitário."&&players[index].centado==false){
		send_packet(0, "play dando_descarga.ogg "+players[index].x+" "+players[index].y, players[index].map);
		send_reliable(players[index].peer_id, "stopmoving", 0);
		players[index].tmaquina.restart();
		for(uint i=0;i<banheiros.length();i++){
			if(players[index].map==banheiros[i].map) banheiros[i].descarga=0;
		}
	}
	else if(msga=="Cornelius, O Bruxo, está de pé aqui, preparando suas poções."&&players[index].terminouquestritual==0&&players[index].questritual==1){
		if(players[index].inv_item_number("corpo_de_cachorro")>=25&&players[index].inv_item_number("corpo_de_macaco")>=20&&players[index].inv_item_number("corpo_de_lobo")>=15&&players[index].inv_item_number("corpo_de_urso")>=10&&players[index].inv_item_number("corpo_de_tubarão")>=4&&players[index].inv_item_number("corpo_de_dragonsauro")>=1){
			send_reliable(players[index].peer_id, "msg2 Bruxo; ;diz:; ;Parabéns! Você conseguiu o que eu queria, para criar o ritual da meia-noite e dominar este mundo, pela maldade e desastre dos humanos... Muito obrigado! Aqui estão suas recompensas:; ;50 ;dardo;, 50 ;dardo_envenenado; ;e; 100 ;fita_explosiva;.", 0);
			players[index].inv_add_item("corpo_de_cachorro", -25, false);
			players[index].inv_add_item("corpo_de_macaco", -20, false);
			players[index].inv_add_item("corpo_de_lobo", -15, false);
			players[index].inv_add_item("corpo_de_urso", -10, false);
			players[index].inv_add_item("corpo_de_tubarão", -4, false);
			players[index].terminouquestritual=1;
			players[index].inv_add_item("fita_explosiva", 100, false);
			players[index].inv_add_item("dardo", 50, false);
			players[index].inv_add_item("dardo_envenenado", 50, false);
			players[index].inv_add_item("corpo_de_dragonsauro",1);
		}
	}
	else if(msga=="Cornelius, O Bruxo, está de pé aqui, preparando suas poções."&&players[index].inv_item_number("pele_de_coelho")>=35){
		players[index].inv_add_item("pele_de_coelho", -35, false);
		players[index].inv_add_item("pacote_de_mana", 1);
		send_reliable(players[index].peer_id, "msg2 Cornelius, o Bruxo; ;diz:; ;Muito obrigado pelas peles de coelho! Vão servir para uma ótima coisinha...", 0);
	}
	else if(msga=="Uma grande mesa, com cadeiras estofadas em volta, destinada à leitura."&&players[index].inv_item_number("presente")>=10){
		players[index].inv_add_item("presente", -10);
		players[index].inv_add_item("pacote_de_natal", 1);
		send_packet10(0, players[index].charname, players[index].charname, "cfeliz.ogg "+players[index].x+" "+players[index].y, players[index].map);
	}
	else if(msga=="Guarda-roupa."&&players[index].map=="castelo_medieval"){
		if(players[index].x==x_castelo&&players[index].y==y_castelo){
			players[index].maptraveltimer.restart();
			changemap("galinheiro", index, 1, 0);
		}
		else changemap("mundo_medieval", index, 1, 0);
	}
	else if(msga=="Um grande baú de madeira. Parece trancado."){
		for(uint i=0;i<apartamentos.length();i++){
			if(apartamentos[i].map==players[index].map){
				bool t=false;
				for(uint i2=0;i2<computadors.length();i2++){
					if(computadors[i2].map==players[index].map){
						if(computadors[i2].abau==0&&string_contains(string_to_upper_case(players[index].dalison2), string_to_upper_case(players[index].map), 1)<0){
							send_reliable(players[index].peer_id, "msgnormal Este baú está trancado e você não tem permissão para abri-lo!", 0);
							return;
						}
					}
				}
				if(t)return;
				for(uint i2=0;i2<computadors.length();i2++){
					if(computadors[i2].map==players[index].map){
						if(apartamentos[i].apartamentoinv==""){
							send_reliable(players[index].peer_id, "msg2 Esse baú está vazio!", 0);
							return;
						}
						else{
							send_reliable(players[index].peer_id, "lapartamento", 0);
							send_packet(0, "play abaú.ogg "+players[index].x+" "+players[index].y, players[index].map);
							computadors[i2].fbau=1;
							break;
						}
					}
				}
			}
		}
	}
	else if(msga=="Guichê para compras de passagens."&&players[index].map=="porto_de_milão"||msga=="Guichê para compras de passagens."&&players[index].map=="porto"){
		string[] add;
		add.insert_last("Escolha para qual local você deseja a passagem.:cpassagemporto");
		add.insert_last("Cruzeiro para Milão:passagem_de_cruzeiro_para_milão");
		add.insert_last("Cruzeiro para Copa Cabana:passagem_de_cruzeiro_para_copa_cabana");
		send_reliable(players[index].peer_id, "mnormal "+linear(add), 0);
	}
	else if(msga=="Balcão de atendimento."&&players[index].map=="banco"){
		if(players[index].contabancaria==1)send_reliable(players[index].peer_id, "msgnormal Você já tem conta no banco!", 0);
		else if(players[index].inv_item_number("reais")<50)send_reliable(players[index].peer_id, "msgnormal Você precisa de pelomenos 50 reais para abrir sua conta.", 0);
		else{
			players[index].inv_add_item("reais", -50);
			players[index].saldo=50;
			send_reliable(players[index].peer_id, "stopmoving", 0);
			send_packet(0, "play impressora.ogg "+players[index].x+" "+players[index].y, players[index].map);
			players[index].tmaquina.restart();
		}
	}
	else if(msga=="Caixa eletrônico."){
		if(players[index].contabancaria==0){send_reliable(players[index].peer_id, "msgnormal Você não tem conta no banco.", 0);return;}
		string[] add;
		add.insert_last("Belick 's Bank, aqui você é mais!:int caixa_eletrônico");
		add.insert_last("Checar seu saldo:csaldo");
		add.insert_last("Sacar:sac");
		add.insert_last("Depositar:dep");
		add.insert_last("Depositar em outra conta:dep2");
		send_reliable(players[index].peer_id, "mnormal "+linear(add), 0);
	}
	netloop();
}
void comprarcasa(int index){
	if(string_contains(players[index].dalison2, "apartamento", 1)>-1) send_reliable(players[index].peer_id, "msgnormal Você já tem um apartamento!", 0);
	else if(players[index].inv_item_number("reais")<10000) send_reliable(players[index].peer_id, "msgvocênãotem2 10000 reais", 0);
	else{
		bool comprarapartamento=true;
		players[index].dalison2="apartamento_de_"+players[index].charname;
		int maxx=50;
		int maxy=500;
		string mapname="apartamento_de_"+players[index].charname;
		file f;
		f.open("maps/prédio_residencial.map", "r");
		string[] m=string_split(f.read(), "\r\n", false);
		f.close();
		string nome="apartamento_de_"+players[index].charname;
		int x, y;
		if(andar1<10){
			andar1++;
			y=20;
			x=(5*andar1);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar2<10){
			andar2++;
			y=40;
			x=(5*andar2);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar3<10){
			andar3++;
			y=60;
			x=(5*andar3);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar4<10){
			andar4++;
			y=80;
			x=(5*andar4);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar5<10){
			andar5++;
			y=100;
			x=(5*andar5);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar6<10){
			andar6++;
			y=120;
			x=(5*andar6);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar7<10){
			andar7++;
			y=140;
			x=(5*andar7);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar8<10){
			andar8++;
			y=160;
			x=(5*andar8);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar9<10){
			andar9++;
			y=180;
			x=(5*andar9);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar10<10){
			andar10++;
			y=200;
			x=(5*andar10);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar11<10){
			andar11++;
			y=220;
			x=(5*andar11);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar12<10){
			andar12++;
			y=240;
			x=(5*andar12);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar13<10){
			andar13++;
			y=260;
			x=(5*andar13);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar14<10){
			andar14++;
			y=280;
			x=(5*andar14);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar15<10){
			andar15++;
			y=300;
			x=(5*andar15);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar16<10){
			andar16++;
			y=320;
			x=(5*andar16);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar17<10){
			andar17++;
			y=340;
			x=(5*andar17);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar18<10){
			andar18++;
			y=360;
			x=(5*andar18);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar19<10){
			andar19++;
			y=380;
			x=(5*andar19);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar20<10){
			andar20++;
			y=400;
			x=(5*andar20);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar21<10){
			andar21++;
			y=420;
			x=(5*andar21);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar22<10){
			andar22++;
			y=440;
			x=(5*andar22);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar23<10){
			andar23++;
			y=460;
			x=(5*andar23);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar24<10){
			andar24++;
			y=480;
			x=(5*andar24);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar25<10){
			andar25++;
			y=500;
			x=(5*andar25);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar26<10){
			andar26++;
			y=520;
			x=(5*andar26);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar27<10){
			andar27++;
			y=540;
			x=(5*andar27);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar28<10){
			andar28++;
			y=560;
			x=(5*andar28);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar29<10){
			andar29++;
			y=580;
			x=(5*andar29);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar30<10){
			andar30++;
			y=600;
			x=(5*andar30);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar31<10){
			andar31++;
			y=620;
			x=(5*andar31);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar32<10){
			andar32++;
			y=640;
			x=(5*andar32);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar33<10){
			andar33++;
			y=660;
			x=(5*andar33);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar34<10){
			andar34++;
			y=680;
			x=(5*andar34);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar35<10){
			andar35++;
			y=700;
			x=(5*andar35);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar36<10){
			andar36++;
			y=720;
			x=(5*andar36);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar37<10){
			andar37++;
			y=740;
			x=(5*andar37);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar38<10){
			andar38++;
			y=760;
			x=(5*andar38);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar39<10){
			andar39++;
			y=780;
			x=(5*andar39);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar40<10){
			andar40++;
			y=800;
			x=(5*andar40);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar41<10){
			andar41++;
			y=820;
			x=(5*andar41);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar42<10){
			andar42++;
			y=840;
			x=(5*andar42);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar43<10){
			andar43++;
			y=860;
			x=(5*andar43);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar44<10){
			andar44++;
			y=880;
			x=(5*andar44);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar45<10){
			andar45++;
			y=900;
			x=(5*andar45);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar46<10){
			andar46++;
			y=920;
			x=(5*andar46);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar47<10){
			andar47++;
			y=940;
			x=(5*andar47);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar48<10){
			andar48++;
			y=960;
			x=(5*andar48);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar49<10){
			andar49++;
			y=980;
			x=(5*andar49);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else if(andar50<10){
			andar50++;
			y=1000;
			x=(5*andar50);
			m.insert_last("travelpoint:"+x+":"+x+":"+y+":"+y+":1:0:"+nome+":Você entra no apartamento.");
			m.insert_last("zone:"+x+":"+x+":"+y+":"+y+":Apartamento de "+players[index].charname+".");
		}
		else comprarapartamento=false;
		if(comprarapartamento==true){
			f.open("maps/prédio_residencial.map", "w");
			f.write(linear(m));
			f.close();
			f.open("maps/"+mapname+".map", "wb");
			string wtext="map:"+mapname+"\r\nmaxx:"+maxx+"\r\nmaxy:"+maxy+"\r\n
wall:0:0:50:wallnone\n
safezone:0:31:0:50\n
platform:1:10:0:carpet2\n
zone:1:10:0:20:Sala de estar.\n
zone:1:1:0:20:Porta de saída.\n
zone:9:10:0:20:Porta de acesso ao corredor.\n
zone:5:5:0:20:Televisão.\n
zone:3:3:0:20:Poltrona.\n
zone:7:7:0:20:Poltrona.\n
platform:11:20:0:carpet\n
zone:11:20:0:20:Corredor.\n
zone:11:11:0:20:Porta de acesso à sala.\n
wall:10:0:20:walldoor2\n
door:9:0:11:0:200:door.ogg:none:door2open.ogg:door2close.ogg\n
door:11:0:9:0:200:door.ogg:none:door2open.ogg:door2close.ogg\n
zone:14:14:0:20:Porta de acesso ao quarto.\n
zone:16:16:0:20:Porta de acesso ao banheiro.\n
door:14:0:10:21:1:door.ogg:none:door2open.ogg:door2close.ogg\n
door:10:21:14:0:1:door.ogg:none:door2open.ogg:door2close.ogg\n
door:16:0:20:21:1:door.ogg:none:door2open.ogg:door2close.ogg\n
door:20:21:16:0:1:door.ogg:none:door2open.ogg:door2close.ogg\n
platform:1:10:21:carpet2\n
zone:1:10:21:50:Quarto.\n
zone:1:1:21:50:Tomada.\n
zone:2:2:21:50:Computador.\n
zone:4:4:21:50:Criado mudo.\n
zone:5:5:21:50:Cama.\n
zone:6:6:21:50:Um grande baú de madeira. Parece trancado.\n
zone:8:8:21:50:Guarda-roupa.\n
zone:10:10:21:50:Porta de acesso ao corredor.\n
wall:11:21:50:wallnone\n
platform:12:20:21:cement\n
zone:12:20:21:50:Banheiro.\n
zone:12:12:21:50:Chuveiro.\n
zone:14:14:21:50:Vaso sanitário.\n
zone:16:16:21:50:Pia.\n
zone:20:20:21:50:Porta de acesso ao corredor.\n
wall:21:21:50:wallnone\n
zone:21:30:0:20:Cozinha.\n
zone:20:21:0:20:Porta de acesso a cozinha.\n
wall:21:0:20:walldoor2\n
door:20:0:22:0:200:door.ogg:none:door2open.ogg:door2close.ogg\n
door:22:0:20:0:200:door.ogg:none:door2open.ogg:door2close.ogg\n
zone:22:22:0:20:Porta de acesso ao corredor.\n
platform:22:30:0:concrete3\n
platform:24:24:0:chair\n
zone:24:24:0:20:Cadeira.\n
zone:26:26:0:20:Mesa.\n
zone:28:28:0:20:Pia.\n
zone:30:30:0:20:Geladeira.\n
wall:31:0:50:wallnone\n
desativar:bicicleta\n
desativar:camera\n
desativar:coordenadas\n
desativar:varinha\n
teto:none\ntravelpoint:1:1:0:0:"+x+":"+y+":prédio_residencial:Você sai do apartamento.";
			f.write(wtext);
			f.close();
			update("prédio_residencial");
			players[index].inv_add_item("reais", -10000);
			send_reliable(players[index].peer_id, "msgnormal Você comprou seu apartamento!", 0);
			colocar_apartamento(players[index].dalison2);
			int codcasa=random(1000, 9999);
			spawncomputador(2, 21, players[index].dalison2, codcasa, 0, 1, 0);
			colocar_pia(16, 21, players[index].dalison2);
			colocar_banheiro(14, 21, players[index].dalison2);
			send_reliable(players[index].peer_id, "msg2 Atenção! O código para entrar em sua casa é; "+codcasa, 0);
		}
		else send_reliable(players[index].peer_id, "msgnormal O prédio já está lotado!", 0);
	}
}
void imenu(int index){
	string t=get_tile_at(players[index].x, players[index].y, players[index].map);
	string tt=get_zone_at(players[index].x, players[index].y, players[index].map);
	if(players[index].map=="pesqueiro"&&string_contains(get_tile_at(players[index].x, players[index].y, players[index].map), "shallow", 1)>-1&&players[index].jpescar){
		if(players[index].npescar>0){
			players[index].npescar--;
			players[index].tppeixe.restart();
			if(players[index].npescar<0)players[index].npescar=0;
			if(players[index].ppeixe==1)send_packet10(0, players[index].charname, players[index].charname, "molinete2.ogg "+players[index].x+" "+players[index].y, players[index].map);
			else{
				send_packet10(0, players[index].charname, players[index].charname, "molinete1.ogg "+players[index].x+" "+players[index].y, players[index].map);
				players[index].plinha=1;
			}
			if(players[index].npescar==0){
				players[index].tppeixe.force(0);players[index].tppeixe.pause();
				if(players[index].ppeixe==1)players[index].inv_add_item("peixe_pescado", 1);
				players[index].ppeixe=0;
				players[index].plinha=0;
			}
		}
		else if(players[index].npescar<=0){
			players[index].npescar=1;
			players[index].npescando=0;
			players[index].tppeixe.restart();
			players[index].npescar=random(3, 9);
			if(players[index].inv_item_number("minhoca")>0){
				players[index].inv_add_item("minhoca", -1);
				players[index].npescar=random(3, 9);
				players[index].npescando=1;
			}
			send_packet10(0, players[index].charname, players[index].charname, "lanzol.ogg "+players[index].x+" "+players[index].y, players[index].map);
		}
		return;
	}
	else if(players[index].map=="pesqueiro"&&tt=="Um grande lago."){
		if(string_contains(players[index].inv, "chave_da_lancha_de_", 1)<=0){
			send_reliable(players[index].peer_id, "msgnormal Você não tem chave de nenhuma lancha!", 0);
			return;
		}
		string[] d=string_split(players[index].inv, "\r\n", false);
		for(uint i=0;i<d.length();i++){
			if(string_contains(d[i], "chave_da_lancha_de_", 1)>-1){
				string[] dd=string_split(d[i], "=", false);
				string it=string_replace(dd[0], "chave_da_lancha_de_", "", false);
				file f;
				f.open("lanchas/"+it+".md", "r");
				double n=string_to_number(f.read());
				f.close();
				if(n<=20){
					send_reliable(players[index].peer_id, "msgnormal Não tem gasolina o suficiente nesta lancha.", 0);
					return;
				}
				send_reliable(players[index].peer_id, "lanchaliga", 0);
			}//contains chave
		}//for
		return;
	}//fim da lancha
	else if(string_contains(t, "water2", 1)>-1||string_contains(t, "shallow", 1)>-1){
		if(string_contains(players[index].draw, "extintor", 1)<0)return;
		if(players[index].extintor<10){
			send_packet(0, "play recarregar_extintor.ogg "+players[index].x+" "+players[index].y, players[index].map);
			players[index].extintor+=1;
			return;
		}
	}
	for(uint i=0;i<minasouro.length();i++){
		if(minasouro[i].x==players[index].x&&minasouro[i].y==players[index].y&&minasouro[i].map==players[index].map){
			minasouro[i].quantoscavar--;
			send_packet(0, "play c_mina.ogg "+minasouro[i].x+" "+minasouro[i].y, minasouro[i].map);
			send_packet(0, "play t_ouro"+random(1, 2)+".ogg "+minasouro[i].x+" "+minasouro[i].y, minasouro[i].map);
			if(minasouro[i].quantoscavar<=0){
				send_packet(0, "play d_mina.ogg "+minasouro[i].x+" "+minasouro[i].y, minasouro[i].map);
				spawn_obj(players[index].x,players[index].y,"ouro",minasouro[i].quantosouro,players[index].map);
				minasouro.remove_at(i);
			}
			break;
		}
	}
	for(uint i=0;i<pias.length();i++){
		if(pias[i].x==players[index].x&&pias[i].y==players[index].y&&pias[i].map==players[index].map&&pias[i].aberta==false){
			send_packet(0, "play atorneira.ogg "+pias[i].x+" "+pias[i].y, pias[i].map);
			pias[i].fechando.restart();
			pias[i].fechar.restart();
			send_packet(0, "play lavando_mãos.ogg "+pias[i].x+" "+pias[i].y, pias[i].map);
			pias[i].aberta=true;
			send_reliable(players[index].peer_id, "stopmoving", 0);
			break;
		}
	}
	for(uint i=0;i<cavalos.length();i++){
		if(cavalos[i].x==players[index].x&&players[index].map==cavalos[i].mapa){
			if(players[index].cavalo==false){
				players[index].cavalo=true;
				send_reliable(players[index].peer_id, "stopmoving", 0);
				players[index].y=1;
				send_reliable(players[index].peer_id,"move "+players[index].x+" "+players[index].y,0);
				send_packet(0,"upl "+players[index].charname+" "+players[index].x+" "        +players[index].y+" "+players[index].map,players[index].map);
			}
			else if(players[index].cavalo==true){
				players[index].cavalo=false;
				send_reliable(players[index].peer_id, "startmoving", 0);
				players[index].y=2;
				send_reliable(players[index].peer_id,"move "+players[index].x+" "+players[index].y,0);
				send_packet(0,"upl "+players[index].charname+" "+players[index].x+" "        +players[index].y+" "+players[index].map,players[index].map);
			}
		}
	}
	for(uint i=0;i<banheiros.length();i++){
		if(banheiros[i].x==players[index].x&&banheiros[i].y==players[index].y&&banheiros[i].map==players[index].map){
			if(players[index].centado==false){
				if(banheiros[i].vasoaberto==false&&tt!="Mictório."){
					banheiros[i].vasoaberto=true;
					send_packet(0, "play avaso.ogg "+players[index].x+" "+players[index].y, players[index].map);
				}
				else if(banheiros[i].vasoaberto==true&&tt!="Mictório."){
					banheiros[i].vasoaberto=false;
					send_packet(0, "play fvaso.ogg "+players[index].x+" "+players[index].y, players[index].map);
				}
				else if(tt=="Mictório."){
					if(players[index].nurina>0){
						send_reliable(players[index].peer_id, "stopmoving", 0);
						players[index].nurina-=40;
						if(players[index].nurina<0)players[index].nurina=0;
						send_packet(0, "play mijando.ogg "+players[index].x+" "+players[index].y, players[index].map);
						players[index].tmaquina.restart();
						players[index].sujo+=2.5;
					}
				}
			}
			else if(players[index].centado==true){
				if(banheiros[i].vasoaberto==false)send_reliable(players[index].peer_id, "msgnormal Mas você está sentad"+players[index].sexo2+" na tampa do vaso!", 0);
				else{
					if(players[index].nurina>0){
						players[index].nurina-=40;
						if(players[index].nurina<0)players[index].nurina=0;
						send_packet(0, "play mijando.ogg "+players[index].x+" "+players[index].y, players[index].map);
						players[index].sujo+=1.5;
					}
					else if(players[index].ncoco>0&&tt!="Mictório."){
						players[index].ncoco-=5;
						if(players[index].ncoco<0)players[index].ncoco=0;
						send_packet(0, "play cagando"+random(1, 2)+".ogg "+players[index].x+" "+players[index].y, players[index].map);
						players[index].sujo+=1.5;
					}
					banheiros[i].descarga=1;
				}
			}
			return;
		}
	}
	for(uint i=0;i<computadors.length();i++){
		if(computadors[i].x==players[index].x&&computadors[i].y==players[index].y&&computadors[i].map==players[index].map&&players[index].centado==true){
			if(computadors[i].ligada==1){
				computadors[i].ligada=0;
				send_packet(0, "atucomputador "+computadors[i].id+" "+computadors[i].ligada, computadors[i].map);
				send_packet(0, "pcdesliga "+computadors[i].id, computadors[i].map);
				computadors[i].iniciado=false;
				computadors[i].ligando=false;
			}
			else if(computadors[i].ligada==0){
				computadors[i].ligada=1;
				send_packet(0, "atucomputador "+computadors[i].id+" "+computadors[i].ligada, computadors[i].map);
				computadors[i].tligando.restart();
				computadors[i].ligando=true;
			}
		}
	}
}
void vestindo(int index, bool todos=true){
	string final, texto;
	string[] lista;
	if(players[index].bonemizuno==1) lista.insert_last("um boné");
	if(players[index].capacetepolicia==1) lista.insert_last("um capacete_de_polícia");
	if(players[index].chapeupanama==1) lista.insert_last("um chapéu_panamá");
	if(players[index].oculosmizuno==1) lista.insert_last("um óculos_escuros");
	if(players[index].camisamalha==1) lista.insert_last("uma camisa_de_malha");
	if(players[index].coletemizuno==1) lista.insert_last("um colete_de_borracha");
	if(players[index].coletesalvavida==1) lista.insert_last("um colete_salva_vidas");
	if(players[index].coletecamuflado==1) lista.insert_last("um colete_camuflado");
	if(players[index].coletemilitar==1) lista.insert_last("um colete_militar");
	if(players[index].escudo==1) lista.insert_last("um escudo");
	if(players[index].jaquetacouro==1) lista.insert_last("uma jaqueta_de_couro");
	if(players[index].bracadeira==1) lista.insert_last("uma braçadeira");
	if(players[index].luvas==1) lista.insert_last("um par_de_luvas");
	if(players[index].pulseiraouro==1) lista.insert_last("uma pulseira_de_ouro");
	if(players[index].pulseiraprata==1) lista.insert_last("uma pulseira_de_prata");
	if(players[index].pulseirabronze==1) lista.insert_last("uma pulseira_de_bronze");
	if(players[index].anel==1) lista.insert_last("um anel");
	if(players[index].pulseira==1) lista.insert_last("uma pulseira");
	if(players[index].calcamizuno==1) lista.insert_last("uma calça_social");
	if(players[index].calcacamuflada==1) lista.insert_last("Uma calça_camuflada");
	if(players[index].calcajeans==1) lista.insert_last("uma calça_jeans");
	if(players[index].calcalegging==1) lista.insert_last("uma calça_legging");
	if(players[index].sapatoscarpin==1) lista.insert_last("um sapato_scarpin");
	if(players[index].coturnomilitar==1) lista.insert_last("um coturno_militar");
	if(players[index].sapatomagnetico==1) lista.insert_last("um sapato_magnético");
	if(players[index].botamizuno==1) lista.insert_last("um sapato_social");
	if(players[index].tenisadidas==1) lista.insert_last("uma Sandália");
	if(players[index].tenisnike==1) lista.insert_last("um tênis_de_corrida");
	for(uint contador=0;contador<lista.length();contador++){
		if(contador<lista.length()-1) texto+=lista[contador]+", ";
		if(contador==lista.length()-1) texto+="e "+lista[contador];
	}
	if(lista.length()==0) final="Você está pelad"+players[index].sexo2+"! ";
	else if(lista.length()==1) final="Você está usando apenas "+lista[0];
	else final="Você está vestindo: "+texto;
	lista.resize(0);
	texto="";
	final+=". ";
	if(todos==true){
		for (int i=players[index].x-15; i<=players[index].x+15; i++){
			for (uint i2=0; i2<players.length(); i2++){
				if (players[i2].x==i&&players[i2].charname!=players[index].charname&&players[i2].map==players[index].map){
					if(players[i2].bonemizuno==1) lista.insert_last("um boné");
					if(players[i2].capacetepolicia==1) lista.insert_last("um capacete_de_polícia");
					if(players[i2].chapeupanama==1) lista.insert_last("um chapéu_panamá");
					if(players[i2].oculosmizuno==1) lista.insert_last("um óculos_escuros");
					if(players[i2].camisamalha==1) lista.insert_last("uma camisa_de_malha");
					if(players[i2].coletemizuno==1) lista.insert_last("um colete_de_borracha");
					if(players[i2].coletesalvavida==1) lista.insert_last("um colete_salva_vidas");
					if(players[i2].coletecamuflado==1) lista.insert_last("um colete_camuflado");
					if(players[i2].coletemilitar==1) lista.insert_last("um colete_militar");
					if(players[i2].escudo==1) lista.insert_last("um escudo");
					if(players[i2].jaquetacouro==1) lista.insert_last("uma jaqueta_de_couro");
					if(players[i2].bracadeira==1) lista.insert_last("uma braçadeira");
					if(players[i2].luvas==1) lista.insert_last("um par_de_luvas");
					if(players[i2].anel==1) lista.insert_last("um anel");
					if(players[i2].pulseiraouro==1) lista.insert_last("uma pulseira_de_ouro");
					if(players[i2].pulseiraprata==1) lista.insert_last("uma pulseira_de_prata");
					if(players[i2].pulseirabronze==1) lista.insert_last("uma pulseira_de_bronze");
					if(players[i2].pulseira==1) lista.insert_last("uma pulseira");
					if(players[i2].calcamizuno==1) lista.insert_last("uma calça_social");
					if(players[i2].calcajeans==1) lista.insert_last("uma calça_jeans");
					if(players[i2].calcacamuflada==1) lista.insert_last("uma calça_camuflada");
					if(players[i2].calcalegging==1) lista.insert_last("uma calça_legging");
					if(players[i2].sapatoscarpin==1) lista.insert_last("um sapato_scarpin");
					if(players[i2].coturnomilitar==1) lista.insert_last("um coturno_militar");
					if(players[i2].botamizuno==1) lista.insert_last("um sapato_social");
					if(players[i2].sapatomagnetico==1) lista.insert_last("um sapato_magnético");
					if(players[i2].tenisadidas==1) lista.insert_last("uma Sandália");
					if(players[i2].tenisnike==1) lista.insert_last("um tênis_de_corrida");
					for(uint contador=0;contador<lista.length();contador++){
						if(contador<lista.length()-1) texto+=lista[contador]+", ";
						if(contador==lista.length()-1) texto+="e "+lista[contador];
					}
					texto+=". ";
					if(lista.length()==0) final+=players[i2].charname+" está pelad"+players[i2].sexo2+"!";
					else if(lista.length()==1) final+=players[i2].charname+" está usando apenas "+lista[0];
					else final+=players[i2].charname+" está vestindo: "+texto;
					lista.resize(0);
					texto="";
				}
			}
		}
	}
	send_reliable(players[index].peer_id, "msgvestindo "+final, 0);
}
void afk(int index){
	bool achou=false;
	for(uint i=0;i<bombaatomicas.length();i++){
		if(bombaatomicas[i].nome==players[index].charname){
			achou=true;
			break;
		}
	}
	for(uint i=0; i<bombadefogos.length(); i++){
		if(bombadefogos[i].nome==players[index].charname){
			achou=true;
			break;
		}
	}
	for(uint i=0;i<maxbombas.length();i++){
		if(maxbombas[i].nome==players[index].charname){
			achou=true;
			break;
		}
	}
	if(bombanucleares.length()>0)achou=true;
	for(uint i=0;i<players.length();i++){
		if(players[i].tmeteoro.elapsed>0){
			achou=true;
			break;
		}
	}
	if(players[index].afk){
		players[index].afk=false;
		send_reliable(0,"playerbeep "+players[index].charname+" 1",0);
		send_reliable(0,"ps afkoff.ogg",0);
		send_reliable(0, "msgdepois "+players[index].charname+" está de volta!",0);
		send_reliable(players[index].peer_id,"startmoving",0);
		send_reliable(players[index].peer_id, "fimnovato", 0);
		send_reliable(players[index].peer_id, "ausente0", 0);
		players[index].bipar=1;
	}
	else if(players[index].paralisado==true||players[index].paralisado2==true||gamestopped==true||achou==true){
		return;
	}
	else{
		send_reliable(players[index].peer_id, "ininovato", 0);
		players[index].afking=true;
		players[index].afksecondtimer.restart();
		players[index].afkseconds=11;
		send_reliable(players[index].peer_id,"msgnormal Iniciando AFK...", 0);
		send_reliable(players[index].peer_id, "ausente1", 0);
	}
}
void u_bcurar(int index, string nome, int quantidade){
	string saber=get_zone_at(players[index].x,players[index].y,players[index].map);
	if(saber=="Área de luta."||players[index].pacifico==1||players[index].health<=0)return;
	else if(players[index].inv_item_number(nome)>=quantidade){
		uint total=0;
		for(uint i=0;i<players[index].nomesequipe.length();i++){
			int z=get_player_index_from(players[index].nomesequipe[i]);
			if(z>-1){
				if(get_player_distance(players[index],players[z])>-1&&get_player_distance(players[index],players[z])<=5){
					if(players[z].pacifico==0&&players[z].newbie==false&&players[z].afk==false){
						total++;
					}
				}
			}
		}
		if(total==0)return;
		double curar=(quantidade*100/total);
		for(uint i=0;i<players[index].nomesequipe.length();i++){
			int z=get_player_index_from(players[index].nomesequipe[i]);
			if(z>-1){
				if(get_player_distance(players[index],players[z])>-1&&get_player_distance(players[index],players[z])<=5){
					if(players[z].pacifico==0&&players[z].newbie==false&&players[z].afk==false){
						players[z].health+=curar;
						if(players[z].health>players[z].maxhealth)players[z].health=players[z].maxhealth;
					}
				}
			}
		}
		players[index].inv_add_item(nome,-quantidade);
	}
}
void comandosadm(int index, string[] parsed){
	if(parsed[0]=="/gamestop"&&gamestopped==false){
		if(dcomando(index, parsed))return;
		send_reliable(0,"stopmoving",0);
		send_reliable(0,"ps gamestop.ogg",0);
		send_reliable(0,"msgnormal O jogo foi congelado!", 0);
		gamestopped=true;
	}
	else if(parsed[0]=="/quantos"&&parsed.length()>1){
		string[] t=find_directories("players/*");
		int quantidade=0;
		string[] itens;
		for(uint i=0;i<t.length();i++){
			if(file_exists("players/"+t[i]+"/inv.md")){
				file f;
				f.open("players/"+t[i]+"/inv.md", "r");
				string[] tt=string_split(f.read(), "\r\n", false);
				f.close();
				for(uint i2=0;i2<tt.length();i2++){
					if(string_contains(tt[i2], parsed[1], 1)>-1){
						string[] ttt=string_split(tt[i2], "=", false);
						itens.insert_last(t[i]+" com "+ttt[1]);
						quantidade+=string_to_number(ttt[1]);
					}
				}
			}
		}
		send_reliable(players[index].peer_id, "msgnormal "+quantidade+" "+parsed[1]+": "+linear(itens), 0);
	}
	else if(parsed[0]=="/lcoisas"){
		string[] m;
		m.insert_last(players.length+" jogadores");
		m.insert_last(objs.length+" objetos");
		m.insert_last(cachorros.length+" cachorros");
		m.insert_last(tempocaiu.length+" para pessoas cair");
		m.insert_last(fitaexplosivas.length+" fitas explosivas");
		m.insert_last(ratos.length+" ratos");
		m.insert_last(bebesauros.length+" bebessauros");
		m.insert_last(bullets.length+" balas em movimento");
		m.insert_last(guardasandar.length+" guardas no castelo medieval");
		m.insert_last(cavalos.length+" cavalos");
		m.insert_last(computadors.length+" computadores");
		m.insert_last(apartamentos.length+" apartamentos");
		m.insert_last(walls.length+" paredes quebráveis");
		m.insert_last(bombadefogos.length+" bomba de fogo");
		m.insert_last(bombaatomicas.length+" bomba atômica");
		m.insert_last(fogos.length+" fogos do bruxo");
		m.insert_last(fogoqueimars.length+" fogos ativos de bomba de fogo");
		m.insert_last(lobos.length+" lobos");
		m.insert_last(cocos.length+" cocos");
		m.insert_last(tubaraos.length+" tubarões");
		m.insert_last(macacos.length+" macacos");
		m.insert_last(dragonsauros.length+" dragonsauros");
		m.insert_last(ursos.length+" ursos");
		m.insert_last(guardas.length+" guardas");
		m.insert_last(mercenarios.length+" mercenários");
		m.insert_last(guardacofres.length+" guardas do cofre");
		m.insert_last(prensadeiras.length+" prensadeiras");
		m.insert_last(bombaremotas.length+" bombas remotas");
		m.insert_last(pajes.length+" pajés");
		m.insert_last(sequestradors.length+" sequestradores");
		m.insert_last(projeteis.length+" projéteis");
		m.insert_last(dogs.length+" ondas d'água");
		send_reliable(players[index].peer_id, "msgnormal "+linear(m), 0);
	}
	else if(parsed[0]=="/vbackup"&&parsed.length()>1){
		if(directory_exists("players/"+parsed[1])==false)send_reliable(players[index].peer_id, "msgnormal Jogador não existe.", 0);
		else if(file_exists("players2/"+parsed[1]+"/inv.md")==false)send_reliable(players[index].peer_id, "msgnormal Nenhum backup.", 0);
		else{
			int id=get_player_index_from(parsed[1]);
			if(id>-1)terminar(id);
			file_copy("players2/"+parsed[1]+"/inv.md", "players/"+parsed[1]+"/inv.md", true);
			send_reliable(players[index].peer_id, "msgnormal Pronto.", 0);
		}
	}
	else if(parsed[0]=="/vbackup2"&&parsed.length()>1){
		if(directory_exists("players/"+parsed[1])==false)send_reliable(players[index].peer_id, "msgnormal Jogador não existe.", 0);
		else if(file_exists("players/"+parsed[1]+"/inv2.md")==false)send_reliable(players[index].peer_id, "msgnormal Nenhum backup.", 0);
		else{
			int id=get_player_index_from(parsed[1]);
			if(id>-1)terminar(id);
			file_delete("players/"+parsed[1]+"/inv.md");
			file_copy("players/"+parsed[1]+"/inv2.md", "players/"+parsed[1]+"/inv.md", true);
			send_reliable(players[index].peer_id, "msgnormal Pronto.", 0);
		}
	}
	else if(parsed[0]=="/backup"){
		send_reliable(0, "stopmoving", 0);
		send_reliable(0, "msgnormal Fazendo backup de contas...", 0);
		directory_delete("players2");
		directory_create("players2");
		string[] pastas=find_directories("players/*");
		for(uint i=0;i<pastas.length();i++){
			directory_create("players2/"+pastas[i]);
			if(file_exists("players/"+pastas[i]+"/inv.md")){
				file_copy("players/"+pastas[i]+"/inv.md", "players2/"+pastas[i]+"/inv.md", true);
			}
		}
		send_reliable(0, "msgnormal Pronto.", 0);
		for(uint i=0;i<players.length();i++){
			if(players[i].paralisado2==false&&players[i].paralisado==false&&players[i].afk==false)send_reliable(players[i].peer_id, "startmoving", 0);
		}
	}
	else if(parsed[0]=="/nadm"){
		players[index].admin=false;
		players[index].dev=false;
		players[index].pacifico=0;
		send_reliable(players[index].peer_id, "fimnovato", 0);
		send_reliable(0, "ps notify_text.ogg", 0);
		send_reliable(0, "pp "+players[index].charname+" "+players[index].pacifico, 0);
		send_reliable(0,"msgdepois "+players[index].charname+" deixou de ser pacifista!", 0);
	}
	else if(parsed[0]=="/fbandeira"){
		for(uint i=0;i<players.length();i++){
			if(players[i].equipedesafio==1||players[i].equipemortal==1){
				players[i].equipemortal=0;
				players[i].equipedesafio=0;
			}
		}
	}
	else if(parsed[0]=="/listarbandeira"){
		string msg;
		msg="Na equipe Desafio:; ";
		for(uint i=0;i<players.length();i++){
			if(players[i].equipedesafio==1)msg+=players[i].charname+", ";
		}
		msg+=";na equipe mortal:; ";
		for(uint i=0;i<players.length();i++){
			if(players[i].equipemortal==1)msg+=players[i].charname+", ";
		}
		msg+=".";
		send_reliable(players[index].peer_id, "msg2 "+msg, 0);
	}
	else if(parsed[0]=="/msexo"&&parsed.length()>2){
		int id=get_player_index_from(parsed[1]);
		if(id>-1){
			players[id].sexo=string_to_number(parsed[2]);
			if(players[id].sexo==0)players[id].sexo2="a";
			else players[id].sexo2="o";
			send_reliable(players[index].peer_id, "msgnormal Pronto.", 0);
		}
	}
	else if(parsed[0]=="/inibandeira"){
		for(uint i=0;i<walls.length();i++){
			if(walls[i].map=="desafio_constante")retirar_wall(walls[i].map, walls[i].x);
		}
		spawn_obj(1, 0, "bandeira_mortal", 1, "desafio_constante");
		spawn_obj(99, 0, "bandeira_desafio", 1, "desafio_constante");
		colocar_wall(20, "desafio_constante", 1000000);
		colocar_wall(80, "desafio_constante", 1000000);
		for(uint i=0;i<players.length();i++){
			if(players[i].equipedesafio==1||players[i].equipemortal==1)changemap("desafio_constante", i, 60, 0, "moveu.ogg");
		}
		send_reliable(0, "msgnormal Começou! Que pegue a bandeira o melhor!", 0);
	}
	else if(parsed[0]=="/adicionard"&&parsed.length()>1){
		int n=get_player_index_from(parsed[1]);
		if(n>-1){
			if(players[n].equipedesafio==0){
				send_reliable(0, "msgdepois "+players[n].charname+" está na equipe Desafio!", 0);
				players[n].equipedesafio=1;
			}
		}
	}
	else if(parsed[0]=="/adicionarm"&&parsed.length()>1){
		int n=get_player_index_from(parsed[1]);
		if(n>-1){
			if(players[n].equipemortal==0){
				send_reliable(0, "msgdepois "+players[n].charname+" está na equipe Mortal!", 0);
				players[n].equipemortal=1;
			}
		}
	}
	else if(parsed[0]=="/parede"&&parsed.length()>2) colocar_wall(string_to_number(parsed[1]), parsed[2]);
	else if(parsed[0]=="/add"&&parsed.length()>3){
		int id=get_player_index_from(parsed[1]);
		if(id>-1){
			players[id].inv_add_item(parsed[2], 1);
			if(parsed[2]=="mp7")players[id].mp7+=string_to_number(parsed[3]);
		}
	}
	else if(parsed[0]=="/gamestart"&&gamestopped){
		if(dcomando(index, parsed))return;
		send_reliable(0,"ps gamestart.ogg",0);
		send_reliable(0,"startmoving",0);
		send_reliable(0,"msgnormal O jogo foi descongelado!", 0);
		gamestopped=false;
	}
	else if(parsed[0]=="/desativar"&&parsed.length()>1){
		send_packet(0, "stopmoving", parsed[1]);
		send_packet(0, "msgnormal O mapa foi congelado!", parsed[1]);
		send_packet(0, "ps gamestop.ogg", parsed[1]);
	}
	else if(parsed[0]=="/ativar"&&parsed.length()>1){
		send_packet(0, "startmoving", parsed[1]);
		send_packet(0, "msgnormal O mapa foi descongelado!", parsed[1]);
		send_packet(0, "ps gamestart.ogg", parsed[1]);
	}
	else if(parsed[0]=="/desafiom"&&parsed.length()>3){
		for(uint i=0;i<players.length();i++){
			if(players[i].pdesafio==1&&players[i].map!=parsed[1]) changemap(parsed[1], i, string_to_number(parsed[2]), string_to_number(parsed[3]));
		}
	}
	else if(parsed[0]=="/desafioa"&&parsed.length()>1){
		int index2=get_player_index_from(parsed[1]);
		if(index2>-1){
			if(players[index2].pdesafio==0){
				players[index2].pdesafio=1;
				for(uint i=0;i<players.length();i++){
					if(players[i].pdesafio==1){
						send_reliable(players[i].peer_id, "ps notify_startrek_beepdie.ogg", 0);
						send_reliable(players[i].peer_id, "msgdepois "+players[i].charname+" foi adicionad"+players[i].sexo2+" no desafio!", 0);
					}
				}
				players[index].pdesafio=1;
			}
		}
	}
	else if(parsed[0]=="/desafioq"){
		string ca;
		string[] npa;
		for(uint i=0;i<players.length();i++){
			if(players[i].pdesafio==1)npa.insert_last(players[i].charname);
		}
		for(uint i=0;i<npa.length();i++){
			if(i<npa.length())ca+=npa[i]+", ";
			else if(i==npa.length()-1)ca+="e "+npa[i];
		}
		send_reliable(players[index].peer_id, ca, 0);
	}
	else if(parsed[0]=="/n"&&parsed.length()>1){
		string msg=string_replace(get_event_message(), parsed[0]+" ", "", true);
		send_reliable(0, "ps notify_startrek_message.ogg", 0);
		send_reliable(0, msg, 0);
	}
	else if(parsed[0]=="/clearserver"){
		send_reliable(0, "msgnormal Limpando servidor. Para que tudo funcione corretamente, você será desconectado em 6 segundos...", 0);
		writeprefs();
		wait(6000);
		send_reliable(0, "reiniciar", 0);
		objs.resize(0);
		msounds.resize(0);
		minas.resize(0);
		projeteis.resize(0);
		maxbombas.resize(0);
		bombaatomicas.resize(0);
		bombarelogios.resize(0);
		bombadefogos.resize(0);
		bebesauros.resize(0);
		bullets.resize(0);
		dardos.resize(0);
		cachorros.resize(0);
		ursos.resize(0);
		macacos.resize(0);
		lobos.resize(0);
		dogs.resize(0);
		players.resize(0);
	}
	else if(parsed[0]=="/atudoquadro"&&parsed.length()>=1){
		msgquadro.resize(0);
		file f;
		f.open("servidor.msgquadro","wb");
		f.write("");
		f.close();
		send_reliable(event.peer_id,"Mensagens apagadas.",2);
	}
	else if(parsed[0]=="/aquadro"&&parsed.length()>1){
		int r=0;
		r=string_to_number(parsed[1]);
		if(r<msgquadro.length()-1){
			msgquadro.remove_at(string_to_number(parsed[1]));
			file f;
			f.open("servidor.msgquadro","wb");
			f.write(linear(msgquadro));
			f.close();
			send_reliable(event.peer_id, "Mensagem apagada.", 2);
		}
	}
	else if(parsed[0]=="/colocar_cforte"&&parsed.length()>4)colocar_cforte(string_to_number(parsed[1]), string_to_number(parsed[2]), parsed[3], string_to_number(parsed[4]));
	else if(parsed[0]=="/msgpt"){
		msgpt=string_replace(get_event_message(), parsed[0]+" ", "", false);
		file f;
		f.open("mensagempt.txt","w");
		f.write(msgpt);
		f.close();
		url_post("http://www.dbproduction.net/fttd/colocar-mensagem.php", "msg="+msgpt);
		for(uint i=0;i<players.length();i++){
			if(players[i].idiomachat=="pt"){
				send_reliable(players[i].peer_id,"ps motd.ogg",0);
				send_reliable(players[i].peer_id,"msgsublinhado Nova_mensagem_do_dia! "+msgpt, 0);
			}
		}
	}
	else if(parsed[0]=="/msgen"){
		msgen=string_replace(get_event_message(), parsed[0]+" ", "", false);
		file f;
		f.open("mensagemen.txt","w");
		f.write(msgen);
		f.close();
		url_post("http://www.dbproduction.net/fttd/colocar-mensagem.php", "msg="+msgen);
		for(uint i=0;i<players.length();i++){
			if(players[i].idiomachat=="en"){
				send_reliable(players[i].peer_id,"ps motd.ogg",0);
				send_reliable(players[i].peer_id,"msgsublinhado Nova_mensagem_do_dia! "+msgen, 0);
			}
		}
	}
	else if(parsed[0]=="/msges"){
		msges=string_replace(get_event_message(), parsed[0]+" ", "", false);
		file f;
		f.open("mensagemes.txt","w");
		f.write(msges);
		f.close();
		url_post("http://www.dbproduction.net/fttd/colocar-mensagem.php", "msg="+msges);
		for(uint i=0;i<players.length();i++){
			if(players[i].idiomachat=="es"){
				send_reliable(players[i].peer_id,"ps motd.ogg",0);
				send_reliable(players[i].peer_id,"msgsublinhado Nova_mensagem_do_dia! "+msges, 0);
			}
		}
	}
	else if(parsed[0]=="/msgfr"){
		msgfr=string_replace(get_event_message(), parsed[0]+" ", "", false);
		file f;
		f.open("mensagemfr.txt","w");
		f.write(msgfr);
		f.close();
		url_post("http://www.dbproduction.net/fttd/colocar-mensagem.php", "msg="+msgfr);
		for(uint i=0;i<players.length();i++){
			if(players[i].idiomachat=="fr"){
				send_reliable(players[i].peer_id,"ps motd.ogg",0);
				send_reliable(players[i].peer_id,"msgsublinhado Nova_mensagem_do_dia! "+msgfr, 0);
			}
		}
	}
	else if(parsed[0]=="/npt"&&parsed.length()>1){
		string n=string_replace(get_event_message(), parsed[0]+" ", "", false);
		string som="notify_startrek_message.ogg";
		if(string_contains(parsed[1], ".ogg", 1)>-1){
			n=string_replace(n, parsed[1], "", false);
			som=parsed[1];
		}
		for(uint i=0;i<players.length();i++){
			if(players[i].idiomachat=="pt"){
				if(som!="")send_reliable(players[i].peer_id,"ps "+som, 0);
				send_reliable(players[i].peer_id, "msgnormal "+n, 0);
			}
		}
	}
	else if(parsed[0]=="/nen"&&parsed.length()>1){
		string n=string_replace(get_event_message(), parsed[0]+" ", "", false);
		string som="notify_startrek_message.ogg";
		if(string_contains(parsed[1], ".ogg", 1)>-1){
			n=string_replace(n, parsed[1], "", false);
			som=parsed[1];
		}
		for(uint i=0;i<players.length();i++){
			if(players[i].idiomachat=="en"){
				if(som!="")send_reliable(players[i].peer_id,"ps "+som, 0);
				send_reliable(players[i].peer_id, "msgnormal "+n, 0);
			}
		}
	}
	else if(parsed[0]=="/nes"&&parsed.length()>1){
		string n=string_replace(get_event_message(), parsed[0]+" ", "", false);
		string som="notify_startrek_message.ogg";
		if(string_contains(parsed[1], ".ogg", 1)>-1){
			n=string_replace(n, parsed[1], "", false);
			som=parsed[1];
		}
		for(uint i=0;i<players.length();i++){
			if(players[i].idiomachat=="es"){
				if(som!="")send_reliable(players[i].peer_id,"ps "+som, 0);
				send_reliable(players[i].peer_id, "msgnormal "+n, 0);
			}
		}
	}
	else if(parsed[0]=="/nfr"&&parsed.length()>1){
		string n=string_replace(get_event_message(), parsed[0]+" ", "", false);
		string som="notify_startrek_message.ogg";
		if(string_contains(parsed[1], ".ogg", 1)>-1){
			n=string_replace(n, parsed[1], "", false);
			som=parsed[1];
		}
		for(uint i=0;i<players.length();i++){
			if(players[i].idiomachat=="fr"){
				if(som!="")send_reliable(players[i].peer_id,"ps "+som, 0);
				send_reliable(players[i].peer_id, "msgnormal "+n, 0);
			}
		}
	}
	else if(parsed[0]=="/ladm"){
		if(msgadm.length()==0){send_reliable(players[index].peer_id, "msgnormal Nenhuma mensagem.", 0);return;}
		string r;
		r="Tem "+(msgadm.length()-1)+" mensagens. ";
		for(uint i=0;i<msgadm.length()-1;i++){
			if(i>msgadm.length())break;
			r+="Mensagem "+i+": "+msgadm[i];
		}
		send_reliable(event.peer_id,r,2);
	}
	else if(parsed[0]=="/aadm"&&parsed.length()>=1){
		msgadm.resize(0);
		file f;
		f.open("servidor.msgadm","wb");
				f.write(linear(msgadm));
		f.close();
		send_reliable(event.peer_id,"Mensagens apagadas.",0);
	}
	else if(parsed[0]=="/mdono"&&parsed.length()>2){
		int id=get_player_index_from(parsed[1]);
		if(id>-1){
			players[id].dalison2=parsed[2];
			send_reliable(players[index].peer_id, "msgnormal Pronto.", 0);
		}
	}
	else if(parsed[0]=="/mxp"&&parsed.length()>2){
		int i=get_player_index_from(parsed[1]);
		if(i>-1){
			players[i].xprequerida=string_to_number(parsed[2]);
			players[i].xp=string_to_number(parsed[2]);
			send_reliable(players[index].peer_id, "msgnormal Pronto.", 0);
		}
	}
	else if(parsed[0]=="/mlevel"&&parsed.length()>2){
		int i=get_player_index_from(parsed[1]);
		if(i>-1){
			players[i].level=string_to_number(parsed[2]);
			send_reliable(players[index].peer_id, "msgnormal Pronto.", 0);
		}
	}
	else if(parsed[0]=="/abomba"){
		if(bombaativa==false){
			bombaativa=true;
			send_reliable(0,"ps notify.ogg",0);
			send_reliable(0, "msgnormal Utilização de bombas ativada.", 0);
		}
		else{
			bombaativa=false;
			send_reliable(0,"ps notify.ogg",0);
			send_reliable(0, "msgnormal Utilização de bombas desativada.", 0);
		}
	}
	else if(parsed[0]=="/afita"){
		if(fitaativa==false){
			fitaativa=true;
			send_reliable(0,"ps notify.ogg",0);
			send_reliable(0, "msgnormal Utilização de fitas explosivas ativada.", 0);
		}
		else{
			fitaativa=false;
			send_reliable(0,"ps notify.ogg",0);
			send_reliable(0, "msgnormal Utilização de fitas explosivas desativada.", 0);
		}
	}
	else if(parsed[0]=="/adardo"){
		if(dardoativo==false){
			dardoativo=true;
			send_reliable(0,"ps notify.ogg",0);
			send_reliable(0, "msgnormal Utilização de dardos ativado.", 0);
		}
		else{
			dardoativo=false;
			send_reliable(0,"ps notify.ogg",0);
			send_reliable(0, "msgnormal Utilização de dardos desativado.", 0);
		}
	}
	else if(parsed[0]=="/reboot"){
		reboot();
	}
	else if(parsed[0]=="/notify"&&parsed.length()>=3){
		if(dcomando(index, parsed))return;
		send_reliable(0,"ps "+parsed[1],0);
		send_reliable(0, string_replace(get_event_message(),"/notify "+parsed[1],"",true), 2);
	}
	else if(parsed[0]=="/rawmap"&&parsed.length()>=1){
		file f;
		f.open("maps/"+players[index].map+".map","rb");
		send_reliable(players[index].peer_id,f.read(),2);
		f.close();
	}
	else if(parsed[0]=="/getinv"&&parsed.length>1){
		int id=get_player_index_from(parsed[1]);
		if(id>-1){
			send_reliable(event.peer_id, players[id].inv,0);
		}
	}
	else if(parsed[0]=="/setinv"&&parsed.length>2){
		string[] charfolders=find_directories("players/*");
		int found=charfolders.find(parsed[1]);
		if(found>-1){
			string invset=string_replace(get_event_message(),"/setinv "+parsed[1]+" ","",true);
			int index2=get_player_index_from(parsed[1]);
			if(index2>-1){
				players[index2].inv=invset;
				send_reliable(players[index2].peer_id,"inv "+invset,0);
				send_reliable(event.peer_id,"done",0);
			}
		}
	}
	else if(parsed[0]=="/mod"&&parsed.length()>1){
		file j;
		j.open("players/"+parsed[1]+"/mod.md", "wb");
		j.write("");
		j.close();
		send_reliable(event.peer_id,"Patente moderador ativada para este jogador.",2);
	}
	else if(parsed[0]=="/modr"&&parsed.length()>1){
		file_delete("players/"+parsed[1]+"/mod.md");
		send_reliable(event.peer_id,"ok.",2);
	}
	else if(parsed[0]=="/inv"&&parsed.length()>2){
		int i2=get_player_index_from(parsed[1]);
		if(i2 > -1)
		inv(i2, parsed[2], event.peer_id);
	}
	else if(parsed[0]=="/inv2"&&parsed.length()>2){
		if(players[index].is_admin()){
			int i2=get_player_index_from(parsed[1]);
			if(i2 > -1)
			inv_total(i2, parsed[2], event.peer_id);
		}
	}
	else if(parsed[0]=="/closecliente"&&parsed.length()>=2){
		int i2=get_player_index_from(parsed[1]);
		if(i2 > -1)  send_reliable(players[i2].peer_id,"kill",0);
	}
	else if(parsed[0]=="/rawdata"&&parsed.length()>1){
		if(players[index].is_admin()){
			if(string_contains(get_event_message(), players[index].map, 1)>-1){
				file f;
				f.open("maps/"+players[index].map+".map","wb");
				f.write(string_replace(get_event_message(),"/rawdata ","",true));
				f.close();
				send_unreliable(event.peer_id,"Mapa atualizado.",2);
				update(players[index].map);
			}
			else{
				send_reliable(players[index].peer_id, "msgnormal Não é permitido colocar comandos de um mapa em outro.", 0);
			}//Verificação que um mapa é igual outro
		}//Fim da verificação if de determinados nomes
	}// fim da verificação de admin
	else if(parsed[0]=="/descervida"&&parsed.length()>1){
		int index2=get_player_index_from(parsed[1]);
		if(index2>-1){
			if(players[index2].subirvida==1){
				players[index2].subirvida=0;
				players[index2].maxhealth=5000;
				file_delete("players/"+players[index2].charname+"/subirvida-data.usr");
				send_reliable(players[index].peer_id, "msgnormal Pronto.", 0);
			}
			else send_reliable(players[index].peer_id, "O jogador não está com a vida alta.", 0);
		}
	}
	else if(parsed[0]=="/svida"&&parsed.length()>2){
		int i=get_player_index_from(parsed[1]);
		if(i>-1){
			players[i].maxhealth=string_to_number(parsed[2]);
			players[i].health=players[i].maxhealth;
			send_reliable(players[index].peer_id, "msgnormal Pronto.", 0);
		}
	}
	else if(parsed[0]=="/subirvida"&&parsed.length()>2){
		int index2=get_player_index_from(parsed[1]);
		if(index2>-1){
			if(players[index2].subirvida==0){
				players[index2].subirvida=1;
				players[index2].maxhealth=25000;
				file f;
				f.open("players/"+players[index2].charname+"/subirvida-data.usr", "w");
				f.write(parsed[2]);
				f.close();
				send_reliable(players[index].peer_id, "msgnormal Pronto.", 0);
			}
			else send_reliable(players[index].peer_id, "O jogador já está com sua vida almentada.", 0);
		}
	}
	else if(parsed[0]=="/pvp"){
		send_reliable(0, "ps notifyalert.ogg", 0);
		if(pvp==true){
			pvp=false;
			minas.resize(0);
			projeteis.resize(0);
			maxbombas.resize(0);
			bombaatomicas.resize(0);
			bombarelogios.resize(0);
			bombadefogos.resize(0);
			bebesauros.resize(0);
			dardos.resize(0);
			cachorros.resize(0);
			ursos.resize(0);
			macacos.resize(0);
			lobos.resize(0);
			fitaexplosivas.resize(0);
			sequestradors.resize(0);
			send_reliable(0, "msgnormal Combate Desativado!", 0);
		}
		else if(pvp==false){
			pvp=true;
			send_reliable(0, "msgnormal Combate Ativado!", 0);
		}
	}
	else if(parsed[0]=="/msalvar"&&parsed.length()>1){
		msalvar=parsed[1];
	}
	else if(parsed[0]=="/rsalvar"){
		string[] a=find_directories("players/*");
		uint total=0;
		for(uint i=0;i<a.length();i++){
			if(file_exists("players/"+a[i]+"/"+msalvar)==false){
				directory_delete("players/"+a[i]);
				total++;
			}
		}
		send_reliable(0, "msg2 Pronto!; ;"+total+"; ;contas removidas!", 0);
	}
	else if(parsed[0]=="/ncolete"){
		if(string_to_number(parsed[2])<=0){
			send_reliable(players[index].peer_id, "msgnormal Número não pode ser menor ou igual a 0.", 0);
			return;
		}
		int i=get_player_index_from(parsed[1]);
		if(i>-1){
			players[i].ncolete+=string_to_number(parsed[2]);
			send_reliable(players[index].peer_id, "msgnormal Pronto.", 0);
		}
	}
	else if(parsed[0]=="/banirn"&&parsed.length()>2){
		bool z=false;
		for(uint i=0;i<nban.length();i++){
			if(nban[i][0]==parsed[1]){
				z=true;
				break;
			}
		}
		if(z==true)send_reliable(players[index].peer_id, "msgnormal Jogador já está na lista!", 0);
		else{
			nban.insert_last(parsed[1]+" "+parsed[2]+" "+parsed[3]);
			send_reliable(players[index].peer_id, "msgnormal Pronto.", 0);
			int nmatar=get_player_index_from(parsed[1]);
			if(nmatar>-1){
				terminar(nmatar, 1);
			}
		}
	}
	else if(parsed[0]=="/changemap"&&parsed.length()>2){
		int i2=get_player_index_from(parsed[1]);
		if(i2>-1){
			string mapname=parsed[2];
			if(file_exists("maps/"+mapname+".map")){
				if (parsed.length()>4){
					players[i2].x=string_to_number(parsed[3]);
					players[i2].y=string_to_number(parsed[4]);
				}
				else{
					players[i2].x=1;
					players[i2].y=0;
				}
				changemap(mapname, i2, players[i2].x, players[i2].y, "moveu.ogg");
			}
		}
	}
	else if(parsed[0]=="/presente"&&parsed.length()>1){
		presentes=parsed[1];
		string opa=parsed[1];
		if(string_contains(opa,"=",1)!=-1){
			send_reliable(players[index].peer_id, "Sintaxe inválida.", 0);
		}
		else if(parsed[2]=="") return;
		else{
			send_reliable(0, "ps notify_woosh.ogg", 0);
			for(uint n=0; n<players.length; n++){
				players[n].inv_add_item(presentes,string_to_number(parsed[2]));
			}
		}
	}
	else if(parsed[0]=="/helicoptero"&&parsed.length()>3==true)spawn_helicoptero(string_to_number(parsed[1]), string_to_number(parsed[2]), parsed[3]);
	else if(parsed[0]=="/mover"&&parsed.length()>1){
		if(file_exists("maps/"+parsed[1]+".map")){
			send_reliable(0,"ps nukeboom.ogg",0);
			for(uint n=0; n<players.length; n++){
				if(players[n].map!="test"||players[n].map!="prisão"||players[n].map!="prisão_de_segurança_máxima"){
					changemap(parsed[1],n,1,0);
				}
			}
		}
	}
	else if(parsed[0]=="/invs"){
		if(players[index].invs==0){
			players[index].invs=1;
			players[index].bipar=0;
			send_reliable(players[index].peer_id, "msgnormal invisível.", 0);
		}
		else{
			players[index].invs=0;
			players[index].bipar=1;
			send_reliable(players[index].peer_id, "msgnormal não invisível", 0);
		}
		send_reliable(0,"playerbeep "+players[index].charname+" "+players[index].bipar, 0);
	}
	else if(parsed[0]=="/prender"&&parsed.length()>=1){
		int index2=get_player_index_from(parsed[1]);
		string ba= string_replace(get_event_message(),"/prender "+parsed[1],"",true);
		if(index2>-1){
			players[index2].fichaprisao+=1;
			send_reliable(players[index].peer_id,players[index2].charname+" foi pres"+players[index2].sexo2+".",0);
			string mapname="prisão";
			file f;
			f.open("maps/"+mapname+".map", "rb");
			string mdata=f.read();
			f.close();
			players[index2].map=mapname;
			if (parsed.length()>2){
				players[index].x=string_to_number(parsed[2]);
				players[index].y=string_to_number(parsed[3]);
				send_reliable(players[index2].peer_id, "changemap "+mdata+"\r\nx:"+players[index2].x+"\r\ny:"+players[index2].y+"\r\n", 0);
				send_packet(0,"upl "+players[index2].charname+" "+players[index2].x+" "        +players[index2].y+" "+players[index2].map,players[index2].map);
				senditems(index2);
				send_reliable(players[index2].peer_id,"msgnormal Você foi pres"+players[index2].sexo2+"!",0);
				players[index2].tempoprisao.restart();
			}
			else{
				players[index2].x=1;
				players[index2].y=0;
				send_reliable(players[index2].peer_id, "changemap "+mdata+"\r\nx:"+players[index2].x+"\r\ny:"+players[index2].y+"\r\n", 0);
				send_reliable(0,"upl "+players[index2].charname+" "+players[index2].x+" "        +players[index2].y+" "+players[index2].map,0);
				senditems(index2);
				send_reliable(players[index2].peer_id,"msgnormal Você foi pres"+players[index2].sexo2+"!",0);
				players[index2].tempoprisao.restart();
			}
		}
	}
	else if(parsed[0]=="/kick"&&parsed.length() > 1||parsed[0]=="/expulsar"&&parsed.length() > 1){
		int index=get_player_index_from(parsed[1]);
		if(index>-1) terminar(index);
	}
	else if(parsed[0]=="/clearbans"){
		banidos.resize(0);
		send_reliable(event.peer_id,"Bans cleared.",2);
	}
	else if(parsed[0]=="/banned"){
		send_reliable(event.peer_id,get_comp_bans(),2);
	}
	else if(parsed[0]=="/desbanir"&&parsed.length() > 1||parsed[0]=="/desbanear"&&parsed.length()>1){
		bool s=comp_unban(parsed[1]);
		if(s){
			send_reliable(event.peer_id,"msgnormal Jogador removido da lista de banidos.", 0);
		}
	}
	else if(parsed[0]=="/ban"&&parsed.length() > 1||parsed[0]=="/banear"&&parsed.length()>1){
		int index2=get_player_index_from(parsed[1]);
		if(index2>-1){
			if(is_unbannable(players[index2].charname)||players[index2].dev)return;
			else{
				bool s=comp_ban(parsed[1]);
				if(s) send_reliable(event.peer_id,"msgnormal Jogador adicionado na lista de banidos.", 0);
			}
		}
	}
	else if(parsed[0]=="/move"){
		if(parsed.length()>=4){
			int index1=get_player_index_from(parsed[1]);
			if(index1>-1){
				players[index1].x=string_to_number(parsed[2]);
				players[index1].y=string_to_number(parsed[3]);
				send_reliable(players[index1].peer_id,"move "+parsed[2]+" "+parsed[3],0);
				send_packet(0,"upl "+players[index1].charname+" "+players[index1].x+" "        +players[index1].y+" "+players[index1].map,players[index1].map);
				send_packet(0,"ps moveu.ogg "+players[index1].x+" "        +players[index1].y, players[index1].map);
			}
		}
		else if(parsed.length()==3){
			int index1=get_player_index_from(parsed[1]);
			int index2=get_player_index_from(parsed[2]);
			if(index1>-1 and index2>-1){
				changemap(players[index2].map, index1,players[index2].x,players[index2].y, "moveu.ogg");
				send_packet(0,"upl "+players[index1].charname+" "+players[index1].x+" "        +players[index1].y+" "+players[index1].map,players[index1].map);
			}
		}
	}
	else if(parsed[0]=="/delete"&&parsed.length()>1){
		if(dcomando(index, parsed))return;
		int index4=get_player_index_from(parsed[1]);
		if(index4>-1){
			send_reliable(players[index4].peer_id,"terminate",0);
		}
		if(directory_exists("players/"+parsed[1])){
			if (directory_delete("players/"+parsed[1])) send_reliable(event.peer_id, parsed[1]+" deleted.",0);
		}
	}
	else if(parsed[0]=="/getpassword"){
		if(directory_exists("players/"+parsed[1])){
			send_reliable(event.peer_id,get_player_password(parsed[1]),2);
		}
	}
	else if(parsed[0]=="/setpassword"&&parsed.length>2){
		bool t=changepassword(parsed[1],parsed[2]);
		if(t) send_reliable(event.peer_id,"msgnormal Pronto!",0);
	}
	else if(parsed[0]=="/killplayer"&&parsed.length>1){
		int pi=get_player_index_from(parsed[1]);
		if(pi>-1){
			players[pi].lasthit=players[index].charname;
			players[pi].health=-1;
		}
	}
	else if(parsed[0]=="/ip"&&parsed.length()>1){
		int index2=get_player_index_from(parsed[1]);
		if(index2>-1){
			string ipjogador=net.get_peer_address(players[index2].peer_id);
			ip_locale ip;
			ip.set_ip(ipjogador);
			ip.request();
			send_reliable(event.peer_id,"O ip de "+parsed[1]+" é "+ipjogador+". Dados localizados: "+ip.get_country_name()+", "+ip.get_state()+", "+ip.get_city(), 0);
		}
	}
	else if(parsed[0]=="/delmap" and parsed.length()>1){
		file_delete("maps/"+parsed[1]+".map");
		send_reliable(event.peer_id,"msgnormal Pronto.", 0);
	}
	else if(parsed[0]=="/newmap"&&parsed.length()>2){
		int maxx=string_to_number(parsed[2]);
		int maxy=string_to_number(parsed[3]);
		if(maxx<1001 and maxx>5 and maxy<1001 and maxy>5){
			string mapname=parsed[1];
			if(!file_exists("maps/"+mapname+".map")){
				file f;
				f.open("maps/"+mapname+".map", "wb");
				string wtext="map:"+mapname+"\r\nmaxx:"+maxx+"\r\nmaxy:"+maxy+"\r\nplatform:0:"+maxx+":0:"+parsed[4]+"\r\nwall:0:0:15:wallgeneric\r\nwall:"+maxx+":0:15:wallgeneric\r\n";
				f.write(wtext);
				f.close();
				players[index].map=mapname;
				send_reliable(players[index].peer_id, "changemap "+wtext+"\r\nx:0\r\ny:0\r\n", 0);
				players[index].x=0;
				players[index].y=0;
				send_packet(0,"upl "+players[index].charname+" "+players[index].x+" "        +players[index].y+" "+players[index].map,players[index].map);
				senditems(index);
			}
			else{
				send_reliable(event.peer_id, "This map already exists", 0);
			}
		}
		else{
			send_reliable(event.peer_id, "Out of coordinate ranges!", 0);
		}
	}
	else if(parsed[0]=="/add_map"&&parsed.length()>1){
		add_map(parsed[1]);
	}
	else if(parsed[0]=="/delete_map"&&parsed.length()>1){
		delete_map(parsed[1]);
	}
	else if(parsed[0]=="/item_maps"){
		string m;
		for (uint i=0; i<maps.length(); i++){
			m+=maps[i]+", ";
		}
		send_reliable(event.peer_id,m,2);
	}
	else if(parsed[0]=="/responder"&&parsed.length()>2){
		int index2=get_player_index_from(parsed[1]);
		if(index2>-1){
			string pl;
			int ad=0;
			for (uint i=0; i<players.length(); i++){
				if(players[i].is_admin()){
					string a;
					for (uint i=1; i<parsed.length(); i++){
						a+=parsed[i]+" ";
					}
					send_reliable(players[i].peer_id,players[index].charname+" Responde para "+players[index2].charname+": "+string_replace(get_event_message(),"/responder "+parsed[1],"",true),0);
				}
			}
			send_reliable(players[index2].peer_id,"responder Alguém responde você: "+string_replace(get_event_message(),"/responder "+parsed[1],"",true),0);
		}
	}
	else if(parsed[0]=="/darxp"&&parsed.length()>=1){
		if(parsed.length()==1){
			send_reliable(0, "ps notify_woosh.ogg", 0);
			for(uint i=0; i < players.length(); i++){
				players[i].xp+=string_to_number(parsed[1]);
			}
		}
		else if(parsed.length()>1){
			int z=get_player_index_from(parsed[1]);
			if(z>-1){
				ganhaxp(players[z].charname, string_to_number(parsed[2]));
				write_to(players[z].charname, "xp.usr", players[z].xp);
				send_reliable(players[index].peer_id, "msgnormal Pronto.", 0);
			}
		}
	}
	else if(parsed[0]=="/doublegold"){
		send_reliable(0, "ps notify_blip2.ogg", 0);
		if(doublegold==0){
			send_reliable(0, "msgnormal DoubleGold ativado. Aproveite enquanto há tempo!", 0);
			doublegold=1;
		}
		else if(doublegold==1){
			send_reliable(0, "msgnormal DoubleGold desativado. Em breve tem mais!", 0);
			doublegold=0;
		}
	}
	else if(parsed[0]=="/doublexp"){
		send_reliable(0, "ps notify_blip2.ogg", 0);
		if(doublexp==0){
			send_reliable(0, "msgnormal DoubleXP ativado. Aproveite enquanto há tempo!", 0);
			doublexp=1;
			tempodoublexp.restart();
		}
		else if(doublexp==1){
			send_reliable(0, "msgnormal DoubleXP desativado. Em breve tem mais!", 0);
			doublexp=0;
			numerodoublexp=0;
			avisadoublexp1=0;
			avisadoublexp2=0;
			avisadoublexp3=0;
			avisadoublexp4=0;
		}
	}
	else if(parsed[0]=="/lmapas"){
		string[] a=find_files("maps/*.map");
		string msg;
		for(uint i=0;i<a.length();i++){
			if(i<a.length()-1)msg+=string_replace(a[i], ".map", "", true)+"\r\n";
			else if(i==a.length()) msg+=string_replace(a[i], ".map", "", true);
		}
		send_reliable(players[index].peer_id, msg, 0);
	}
	else if(parsed[0]=="/canhãod"){
		for(uint i=0;i<canhaos.length();i++){
			destroy_moving_sound(canhaos[i].somcanhao);
			canhaos.remove_at(i);
		}
	}
	else if(parsed[0]=="/canhão"&&parsed.length()>3)spawn_canhao(string_to_number(parsed[1]), string_to_number(parsed[2]), parsed[3], string_to_number(parsed[4]));
}
void jraio(){
	int j=random(1, 100);
	if(j<=30){
		int m=random(0, mraio.length()-1);
		for(uint i=0;i<players.length();i++){
			if(players[i].map==mraio[m]&&players[i].coletemizuno==0){
				send_reliable(0, "msgdepois "+players[i].charname+" foi atingid"+players[i].sexo2+" por um raio!", 0);
				changemap(mapainicial, i, 1, 0);
			}
		}
	}
	send_reliable(0, "pst trovão"+random(1, 19)+".ogg", 0);
	if(chovendo==1){
		for(uint i=0;i<players.length();i++){
			if(players[i].ngripe==0&&string_contains(pegartelhado(players[i].map), "telha", 1)<0&&string_contains(pegartelhado(players[i].map), "telhado", 1)<0&&pegartelhado(players[i].map)!="none"){
				int gripar=random(1, 100);
				if(gripar<40){
					players[i].ngripe=1;
					players[i].tgripe.restart();
					send_reliable(players[i].peer_id, "msgnormal Você começa à se sentir mau!", 0);
				}
			}
		}
	}
}

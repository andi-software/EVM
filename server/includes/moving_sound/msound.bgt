class msound{
	string id,soundloop,map;
	int x,y;
	msound(string i, string l, int c1, int c2,string cm)
	{
		id=i;
		soundloop=l;
		x=c1;
		y=c2;
		map=cm;
	}
	void updateme(int c1, int c2)
	{
		x=c1;
		y=c2;
	}
}
msound@[] msounds;
string spawn_moving_sound(string loop, int x, int y,string map, string nnome=""){
	string id;
	bool breakit=false;
	while(true)
	{
		id=randomstring();
		breakit=true;
		for(uint i=0; i<msounds.length; i++)
		{
			if(msounds[i].id==id) breakit=false;
		}
		if(breakit) break;
	}
	msound m1(id,loop,x,y,map);
	msounds.insert_last(m1);
	for(uint iz=0;iz<players.length();iz++){
		if(players[iz].map==map&&players[iz].charname!=nnome) send_reliable(players[iz].peer_id, "cm "+id+" "+loop+" "+x+" "+y+" "+map,0);
	}
	return id;
}
void update_moving_sound(string id, int x, int y){
	for(uint i=0; i<msounds.length; i++)
	{
		if(msounds[i].id==id)
		{
			msounds[i].updateme(x,y);
			for(uint iz=0;iz<players.length();iz++){
				if(players[iz].map==msounds[i].map) send_reliable(players[iz].peer_id,"um "+id+" "+x+" "+y+" "+msounds[i].map,0);
			}
		}
	}
}
void destroy_moving_sound(string id){
	for(uint i=0; i<msounds.length; i++)
	{
		if(msounds[i].id==id)
		{
			send_reliable(0,"destroymsound "+id,0);
			msounds.remove_at(i);
			continue;
		}
	}
}